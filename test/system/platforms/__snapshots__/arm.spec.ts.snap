// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ARM platform tests should correctly scan an ARM image 1`] = `
Object {
  "scanResults": Array [
    Object {
      "facts": Array [
        Object {
          "data": Object {
            "graph": Object {
              "nodes": Array [
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "alpine-baselayout/alpine-baselayout@3.2.0-r6",
                    },
                    Object {
                      "nodeId": "alpine-keys/alpine-keys@2.2-r0",
                    },
                    Object {
                      "nodeId": "apk-tools/apk-tools@2.10.5-r1",
                    },
                    Object {
                      "nodeId": "brotli/brotli-libs@1.0.7-r5",
                    },
                    Object {
                      "nodeId": "busybox/busybox@1.31.1-r16",
                    },
                    Object {
                      "nodeId": "busybox/ssl_client@1.31.1-r16",
                    },
                    Object {
                      "nodeId": "bzip2/libbz2@1.0.8-r1",
                    },
                    Object {
                      "nodeId": "ca-certificates/ca-certificates@20191127-r4|1",
                    },
                    Object {
                      "nodeId": "ca-certificates/ca-certificates-bundle@20191127-r2",
                    },
                    Object {
                      "nodeId": "curl/curl@7.69.1-r0",
                    },
                    Object {
                      "nodeId": "curl/libcurl@7.69.1-r0|2",
                    },
                    Object {
                      "nodeId": "freetype/freetype@2.10.2-r0|1",
                    },
                    Object {
                      "nodeId": "gd/libgd@2.3.0-r1|1",
                    },
                    Object {
                      "nodeId": "geoip/geoip@1.6.12-r1",
                    },
                    Object {
                      "nodeId": "gettext/libintl@0.20.2-r0",
                    },
                    Object {
                      "nodeId": "libc-dev/libc-utils@0.7.2-r3",
                    },
                    Object {
                      "nodeId": "libedit/libedit@20191231.3.1-r0|1",
                    },
                    Object {
                      "nodeId": "libgcrypt/libgcrypt@1.8.5-r0|1",
                    },
                    Object {
                      "nodeId": "libgpg-error/libgpg-error@1.37-r0",
                    },
                    Object {
                      "nodeId": "libjpeg-turbo/libjpeg-turbo@2.0.5-r0",
                    },
                    Object {
                      "nodeId": "libpng/libpng@1.6.37-r1|2",
                    },
                    Object {
                      "nodeId": "libtls-standalone/libtls-standalone@2.9.1-r1|2",
                    },
                    Object {
                      "nodeId": "libwebp/libwebp@1.1.0-r0",
                    },
                    Object {
                      "nodeId": "libxml2/libxml2@2.9.10-r4|1",
                    },
                    Object {
                      "nodeId": "libxslt/libxslt@1.1.34-r0|1",
                    },
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "musl/musl-utils@1.1.24-r8|2",
                    },
                    Object {
                      "nodeId": "ncurses/ncurses-libs@6.2_p20200523-r0|2",
                    },
                    Object {
                      "nodeId": "ncurses/ncurses-terminfo-base@6.2_p20200523-r0",
                    },
                    Object {
                      "nodeId": "nghttp2/nghttp2-libs@1.41.0-r0",
                    },
                    Object {
                      "nodeId": "nginx-module-geoip/nginx-module-geoip@1.19.2-r1",
                    },
                    Object {
                      "nodeId": "nginx-module-image-filter/nginx-module-image-filter@1.19.2-r1",
                    },
                    Object {
                      "nodeId": "nginx-module-njs/nginx-module-njs@1.19.2.0.4.3-r1",
                    },
                    Object {
                      "nodeId": "nginx-module-xslt/nginx-module-xslt@1.19.2-r1",
                    },
                    Object {
                      "nodeId": "nginx/nginx@1.19.2-r1|2",
                    },
                    Object {
                      "nodeId": "openssl/libcrypto1.1@1.1.1g-r0",
                    },
                    Object {
                      "nodeId": "openssl/libssl1.1@1.1.1g-r0|2",
                    },
                    Object {
                      "nodeId": "pax-utils/scanelf@1.2.6-r0",
                    },
                    Object {
                      "nodeId": "pcre/pcre@8.44-r0",
                    },
                    Object {
                      "nodeId": "tzdata/tzdata@2020a-r0",
                    },
                    Object {
                      "nodeId": "xz/xz-libs@5.2.5-r0",
                    },
                    Object {
                      "nodeId": "zlib/zlib@1.2.11-r3",
                    },
                  ],
                  "nodeId": "root-node",
                  "pkgId": "docker-image|arm64v8/nginx@1.19.2-alpine",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "busybox/busybox@1.31.1-r16",
                  "pkgId": "busybox/busybox@1.31.1-r16",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "busybox/busybox@1.31.1-r16",
                    },
                  ],
                  "nodeId": "alpine-baselayout/alpine-baselayout@3.2.0-r6",
                  "pkgId": "alpine-baselayout/alpine-baselayout@3.2.0-r6",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "alpine-keys/alpine-keys@2.2-r0",
                  "pkgId": "alpine-keys/alpine-keys@2.2-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "openssl/libcrypto1.1@1.1.1g-r0",
                  "pkgId": "openssl/libcrypto1.1@1.1.1g-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "openssl/libssl1.1@1.1.1g-r0|1",
                  "pkgId": "openssl/libssl1.1@1.1.1g-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "openssl/libcrypto1.1@1.1.1g-r0",
                    },
                  ],
                  "nodeId": "openssl/libssl1.1@1.1.1g-r0|2",
                  "pkgId": "openssl/libssl1.1@1.1.1g-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "zlib/zlib@1.2.11-r3",
                  "pkgId": "zlib/zlib@1.2.11-r3",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "openssl/libcrypto1.1@1.1.1g-r0",
                    },
                    Object {
                      "nodeId": "openssl/libssl1.1@1.1.1g-r0|1",
                    },
                    Object {
                      "nodeId": "zlib/zlib@1.2.11-r3",
                    },
                  ],
                  "nodeId": "apk-tools/apk-tools@2.10.5-r1",
                  "pkgId": "apk-tools/apk-tools@2.10.5-r1",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "brotli/brotli-libs@1.0.7-r5",
                  "pkgId": "brotli/brotli-libs@1.0.7-r5",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "libtls-standalone/libtls-standalone@2.9.1-r1|1",
                  "pkgId": "libtls-standalone/libtls-standalone@2.9.1-r1",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "ca-certificates/ca-certificates-bundle@20191127-r2",
                    },
                    Object {
                      "nodeId": "openssl/libcrypto1.1@1.1.1g-r0",
                    },
                    Object {
                      "nodeId": "openssl/libssl1.1@1.1.1g-r0|1",
                    },
                  ],
                  "nodeId": "libtls-standalone/libtls-standalone@2.9.1-r1|2",
                  "pkgId": "libtls-standalone/libtls-standalone@2.9.1-r1",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "libtls-standalone/libtls-standalone@2.9.1-r1|1",
                    },
                  ],
                  "nodeId": "busybox/ssl_client@1.31.1-r16",
                  "pkgId": "busybox/ssl_client@1.31.1-r16",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "bzip2/libbz2@1.0.8-r1",
                  "pkgId": "bzip2/libbz2@1.0.8-r1",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "busybox/busybox@1.31.1-r16",
                    },
                    Object {
                      "nodeId": "openssl/libcrypto1.1@1.1.1g-r0",
                    },
                  ],
                  "nodeId": "ca-certificates/ca-certificates@20191127-r4|1",
                  "pkgId": "ca-certificates/ca-certificates@20191127-r4",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "ca-certificates/ca-certificates@20191127-r4|2",
                  "pkgId": "ca-certificates/ca-certificates@20191127-r4",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "ca-certificates/ca-certificates-bundle@20191127-r2",
                  "pkgId": "ca-certificates/ca-certificates-bundle@20191127-r2",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "curl/libcurl@7.69.1-r0|1",
                  "pkgId": "curl/libcurl@7.69.1-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "ca-certificates/ca-certificates@20191127-r4|2",
                    },
                    Object {
                      "nodeId": "nghttp2/nghttp2-libs@1.41.0-r0",
                    },
                    Object {
                      "nodeId": "openssl/libcrypto1.1@1.1.1g-r0",
                    },
                    Object {
                      "nodeId": "openssl/libssl1.1@1.1.1g-r0|1",
                    },
                    Object {
                      "nodeId": "zlib/zlib@1.2.11-r3",
                    },
                  ],
                  "nodeId": "curl/libcurl@7.69.1-r0|2",
                  "pkgId": "curl/libcurl@7.69.1-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "ca-certificates/ca-certificates@20191127-r4|2",
                    },
                    Object {
                      "nodeId": "curl/libcurl@7.69.1-r0|1",
                    },
                    Object {
                      "nodeId": "zlib/zlib@1.2.11-r3",
                    },
                  ],
                  "nodeId": "curl/curl@7.69.1-r0",
                  "pkgId": "curl/curl@7.69.1-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "nghttp2/nghttp2-libs@1.41.0-r0",
                  "pkgId": "nghttp2/nghttp2-libs@1.41.0-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "libpng/libpng@1.6.37-r1|1",
                  "pkgId": "libpng/libpng@1.6.37-r1",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "zlib/zlib@1.2.11-r3",
                    },
                  ],
                  "nodeId": "libpng/libpng@1.6.37-r1|2",
                  "pkgId": "libpng/libpng@1.6.37-r1",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "brotli/brotli-libs@1.0.7-r5",
                    },
                    Object {
                      "nodeId": "bzip2/libbz2@1.0.8-r1",
                    },
                    Object {
                      "nodeId": "libpng/libpng@1.6.37-r1|1",
                    },
                    Object {
                      "nodeId": "zlib/zlib@1.2.11-r3",
                    },
                  ],
                  "nodeId": "freetype/freetype@2.10.2-r0|1",
                  "pkgId": "freetype/freetype@2.10.2-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "freetype/freetype@2.10.2-r0|2",
                  "pkgId": "freetype/freetype@2.10.2-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "libjpeg-turbo/libjpeg-turbo@2.0.5-r0",
                  "pkgId": "libjpeg-turbo/libjpeg-turbo@2.0.5-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "libwebp/libwebp@1.1.0-r0",
                  "pkgId": "libwebp/libwebp@1.1.0-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "freetype/freetype@2.10.2-r0|2",
                    },
                    Object {
                      "nodeId": "libjpeg-turbo/libjpeg-turbo@2.0.5-r0",
                    },
                    Object {
                      "nodeId": "libpng/libpng@1.6.37-r1|1",
                    },
                    Object {
                      "nodeId": "libwebp/libwebp@1.1.0-r0",
                    },
                    Object {
                      "nodeId": "zlib/zlib@1.2.11-r3",
                    },
                  ],
                  "nodeId": "gd/libgd@2.3.0-r1|1",
                  "pkgId": "gd/libgd@2.3.0-r1",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "gd/libgd@2.3.0-r1|2",
                  "pkgId": "gd/libgd@2.3.0-r1",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "geoip/geoip@1.6.12-r1",
                  "pkgId": "geoip/geoip@1.6.12-r1",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "gettext/libintl@0.20.2-r0",
                  "pkgId": "gettext/libintl@0.20.2-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "musl/musl-utils@1.1.24-r8|1",
                  "pkgId": "musl/musl-utils@1.1.24-r8",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "pax-utils/scanelf@1.2.6-r0",
                    },
                  ],
                  "nodeId": "musl/musl-utils@1.1.24-r8|2",
                  "pkgId": "musl/musl-utils@1.1.24-r8",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl-utils@1.1.24-r8|1",
                    },
                  ],
                  "nodeId": "libc-dev/libc-utils@0.7.2-r3",
                  "pkgId": "libc-dev/libc-utils@0.7.2-r3",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "ncurses/ncurses-libs@6.2_p20200523-r0|1",
                  "pkgId": "ncurses/ncurses-libs@6.2_p20200523-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "ncurses/ncurses-terminfo-base@6.2_p20200523-r0",
                    },
                  ],
                  "nodeId": "ncurses/ncurses-libs@6.2_p20200523-r0|2",
                  "pkgId": "ncurses/ncurses-libs@6.2_p20200523-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "ncurses/ncurses-libs@6.2_p20200523-r0|1",
                    },
                  ],
                  "nodeId": "libedit/libedit@20191231.3.1-r0|1",
                  "pkgId": "libedit/libedit@20191231.3.1-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "libedit/libedit@20191231.3.1-r0|2",
                  "pkgId": "libedit/libedit@20191231.3.1-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "libgpg-error/libgpg-error@1.37-r0",
                  "pkgId": "libgpg-error/libgpg-error@1.37-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "libgpg-error/libgpg-error@1.37-r0",
                    },
                  ],
                  "nodeId": "libgcrypt/libgcrypt@1.8.5-r0|1",
                  "pkgId": "libgcrypt/libgcrypt@1.8.5-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "libgcrypt/libgcrypt@1.8.5-r0|2",
                  "pkgId": "libgcrypt/libgcrypt@1.8.5-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "xz/xz-libs@5.2.5-r0",
                  "pkgId": "xz/xz-libs@5.2.5-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "xz/xz-libs@5.2.5-r0",
                    },
                    Object {
                      "nodeId": "zlib/zlib@1.2.11-r3",
                    },
                  ],
                  "nodeId": "libxml2/libxml2@2.9.10-r4|1",
                  "pkgId": "libxml2/libxml2@2.9.10-r4",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "libxml2/libxml2@2.9.10-r4|2",
                  "pkgId": "libxml2/libxml2@2.9.10-r4",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "libgcrypt/libgcrypt@1.8.5-r0|2",
                    },
                    Object {
                      "nodeId": "libxml2/libxml2@2.9.10-r4|2",
                    },
                  ],
                  "nodeId": "libxslt/libxslt@1.1.34-r0|1",
                  "pkgId": "libxslt/libxslt@1.1.34-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "libxslt/libxslt@1.1.34-r0|2",
                  "pkgId": "libxslt/libxslt@1.1.34-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "musl/musl@1.1.24-r9",
                  "pkgId": "musl/musl@1.1.24-r9",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "pax-utils/scanelf@1.2.6-r0",
                  "pkgId": "pax-utils/scanelf@1.2.6-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "ncurses/ncurses-terminfo-base@6.2_p20200523-r0",
                  "pkgId": "ncurses/ncurses-terminfo-base@6.2_p20200523-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "nginx/nginx@1.19.2-r1|1",
                  "pkgId": "nginx/nginx@1.19.2-r1",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "busybox/busybox@1.31.1-r16",
                    },
                    Object {
                      "nodeId": "openssl/libcrypto1.1@1.1.1g-r0",
                    },
                    Object {
                      "nodeId": "openssl/libssl1.1@1.1.1g-r0|1",
                    },
                    Object {
                      "nodeId": "pcre/pcre@8.44-r0",
                    },
                    Object {
                      "nodeId": "zlib/zlib@1.2.11-r3",
                    },
                  ],
                  "nodeId": "nginx/nginx@1.19.2-r1|2",
                  "pkgId": "nginx/nginx@1.19.2-r1",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "busybox/busybox@1.31.1-r16",
                    },
                    Object {
                      "nodeId": "geoip/geoip@1.6.12-r1",
                    },
                    Object {
                      "nodeId": "nginx/nginx@1.19.2-r1|1",
                    },
                  ],
                  "nodeId": "nginx-module-geoip/nginx-module-geoip@1.19.2-r1",
                  "pkgId": "nginx-module-geoip/nginx-module-geoip@1.19.2-r1",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "busybox/busybox@1.31.1-r16",
                    },
                    Object {
                      "nodeId": "gd/libgd@2.3.0-r1|2",
                    },
                    Object {
                      "nodeId": "nginx/nginx@1.19.2-r1|1",
                    },
                  ],
                  "nodeId": "nginx-module-image-filter/nginx-module-image-filter@1.19.2-r1",
                  "pkgId": "nginx-module-image-filter/nginx-module-image-filter@1.19.2-r1",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "pcre/pcre@8.44-r0",
                  "pkgId": "pcre/pcre@8.44-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "busybox/busybox@1.31.1-r16",
                    },
                    Object {
                      "nodeId": "libedit/libedit@20191231.3.1-r0|2",
                    },
                    Object {
                      "nodeId": "nginx/nginx@1.19.2-r1|1",
                    },
                    Object {
                      "nodeId": "pcre/pcre@8.44-r0",
                    },
                  ],
                  "nodeId": "nginx-module-njs/nginx-module-njs@1.19.2.0.4.3-r1",
                  "pkgId": "nginx-module-njs/nginx-module-njs@1.19.2.0.4.3-r1",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "busybox/busybox@1.31.1-r16",
                    },
                    Object {
                      "nodeId": "libxml2/libxml2@2.9.10-r4|2",
                    },
                    Object {
                      "nodeId": "libxslt/libxslt@1.1.34-r0|2",
                    },
                    Object {
                      "nodeId": "nginx/nginx@1.19.2-r1|1",
                    },
                  ],
                  "nodeId": "nginx-module-xslt/nginx-module-xslt@1.19.2-r1",
                  "pkgId": "nginx-module-xslt/nginx-module-xslt@1.19.2-r1",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "tzdata/tzdata@2020a-r0",
                  "pkgId": "tzdata/tzdata@2020a-r0",
                },
              ],
              "rootNodeId": "root-node",
            },
            "pkgManager": Object {
              "name": "apk",
              "repositories": Array [
                Object {
                  "alias": "alpine:3.12.0",
                },
              ],
            },
            "pkgs": Array [
              Object {
                "id": "docker-image|arm64v8/nginx@1.19.2-alpine",
                "info": Object {
                  "name": "docker-image|arm64v8/nginx",
                  "version": "1.19.2-alpine",
                },
              },
              Object {
                "id": "busybox/busybox@1.31.1-r16",
                "info": Object {
                  "name": "busybox/busybox",
                  "version": "1.31.1-r16",
                },
              },
              Object {
                "id": "alpine-baselayout/alpine-baselayout@3.2.0-r6",
                "info": Object {
                  "name": "alpine-baselayout/alpine-baselayout",
                  "version": "3.2.0-r6",
                },
              },
              Object {
                "id": "alpine-keys/alpine-keys@2.2-r0",
                "info": Object {
                  "name": "alpine-keys/alpine-keys",
                  "version": "2.2-r0",
                },
              },
              Object {
                "id": "openssl/libcrypto1.1@1.1.1g-r0",
                "info": Object {
                  "name": "openssl/libcrypto1.1",
                  "version": "1.1.1g-r0",
                },
              },
              Object {
                "id": "openssl/libssl1.1@1.1.1g-r0",
                "info": Object {
                  "name": "openssl/libssl1.1",
                  "version": "1.1.1g-r0",
                },
              },
              Object {
                "id": "zlib/zlib@1.2.11-r3",
                "info": Object {
                  "name": "zlib/zlib",
                  "version": "1.2.11-r3",
                },
              },
              Object {
                "id": "apk-tools/apk-tools@2.10.5-r1",
                "info": Object {
                  "name": "apk-tools/apk-tools",
                  "version": "2.10.5-r1",
                },
              },
              Object {
                "id": "brotli/brotli-libs@1.0.7-r5",
                "info": Object {
                  "name": "brotli/brotli-libs",
                  "version": "1.0.7-r5",
                },
              },
              Object {
                "id": "libtls-standalone/libtls-standalone@2.9.1-r1",
                "info": Object {
                  "name": "libtls-standalone/libtls-standalone",
                  "version": "2.9.1-r1",
                },
              },
              Object {
                "id": "busybox/ssl_client@1.31.1-r16",
                "info": Object {
                  "name": "busybox/ssl_client",
                  "version": "1.31.1-r16",
                },
              },
              Object {
                "id": "bzip2/libbz2@1.0.8-r1",
                "info": Object {
                  "name": "bzip2/libbz2",
                  "version": "1.0.8-r1",
                },
              },
              Object {
                "id": "ca-certificates/ca-certificates@20191127-r4",
                "info": Object {
                  "name": "ca-certificates/ca-certificates",
                  "version": "20191127-r4",
                },
              },
              Object {
                "id": "ca-certificates/ca-certificates-bundle@20191127-r2",
                "info": Object {
                  "name": "ca-certificates/ca-certificates-bundle",
                  "version": "20191127-r2",
                },
              },
              Object {
                "id": "curl/libcurl@7.69.1-r0",
                "info": Object {
                  "name": "curl/libcurl",
                  "version": "7.69.1-r0",
                },
              },
              Object {
                "id": "curl/curl@7.69.1-r0",
                "info": Object {
                  "name": "curl/curl",
                  "version": "7.69.1-r0",
                },
              },
              Object {
                "id": "nghttp2/nghttp2-libs@1.41.0-r0",
                "info": Object {
                  "name": "nghttp2/nghttp2-libs",
                  "version": "1.41.0-r0",
                },
              },
              Object {
                "id": "libpng/libpng@1.6.37-r1",
                "info": Object {
                  "name": "libpng/libpng",
                  "version": "1.6.37-r1",
                },
              },
              Object {
                "id": "freetype/freetype@2.10.2-r0",
                "info": Object {
                  "name": "freetype/freetype",
                  "version": "2.10.2-r0",
                },
              },
              Object {
                "id": "libjpeg-turbo/libjpeg-turbo@2.0.5-r0",
                "info": Object {
                  "name": "libjpeg-turbo/libjpeg-turbo",
                  "version": "2.0.5-r0",
                },
              },
              Object {
                "id": "libwebp/libwebp@1.1.0-r0",
                "info": Object {
                  "name": "libwebp/libwebp",
                  "version": "1.1.0-r0",
                },
              },
              Object {
                "id": "gd/libgd@2.3.0-r1",
                "info": Object {
                  "name": "gd/libgd",
                  "version": "2.3.0-r1",
                },
              },
              Object {
                "id": "geoip/geoip@1.6.12-r1",
                "info": Object {
                  "name": "geoip/geoip",
                  "version": "1.6.12-r1",
                },
              },
              Object {
                "id": "gettext/libintl@0.20.2-r0",
                "info": Object {
                  "name": "gettext/libintl",
                  "version": "0.20.2-r0",
                },
              },
              Object {
                "id": "musl/musl-utils@1.1.24-r8",
                "info": Object {
                  "name": "musl/musl-utils",
                  "version": "1.1.24-r8",
                },
              },
              Object {
                "id": "libc-dev/libc-utils@0.7.2-r3",
                "info": Object {
                  "name": "libc-dev/libc-utils",
                  "version": "0.7.2-r3",
                },
              },
              Object {
                "id": "ncurses/ncurses-libs@6.2_p20200523-r0",
                "info": Object {
                  "name": "ncurses/ncurses-libs",
                  "version": "6.2_p20200523-r0",
                },
              },
              Object {
                "id": "libedit/libedit@20191231.3.1-r0",
                "info": Object {
                  "name": "libedit/libedit",
                  "version": "20191231.3.1-r0",
                },
              },
              Object {
                "id": "libgpg-error/libgpg-error@1.37-r0",
                "info": Object {
                  "name": "libgpg-error/libgpg-error",
                  "version": "1.37-r0",
                },
              },
              Object {
                "id": "libgcrypt/libgcrypt@1.8.5-r0",
                "info": Object {
                  "name": "libgcrypt/libgcrypt",
                  "version": "1.8.5-r0",
                },
              },
              Object {
                "id": "xz/xz-libs@5.2.5-r0",
                "info": Object {
                  "name": "xz/xz-libs",
                  "version": "5.2.5-r0",
                },
              },
              Object {
                "id": "libxml2/libxml2@2.9.10-r4",
                "info": Object {
                  "name": "libxml2/libxml2",
                  "version": "2.9.10-r4",
                },
              },
              Object {
                "id": "libxslt/libxslt@1.1.34-r0",
                "info": Object {
                  "name": "libxslt/libxslt",
                  "version": "1.1.34-r0",
                },
              },
              Object {
                "id": "musl/musl@1.1.24-r9",
                "info": Object {
                  "name": "musl/musl",
                  "version": "1.1.24-r9",
                },
              },
              Object {
                "id": "pax-utils/scanelf@1.2.6-r0",
                "info": Object {
                  "name": "pax-utils/scanelf",
                  "version": "1.2.6-r0",
                },
              },
              Object {
                "id": "ncurses/ncurses-terminfo-base@6.2_p20200523-r0",
                "info": Object {
                  "name": "ncurses/ncurses-terminfo-base",
                  "version": "6.2_p20200523-r0",
                },
              },
              Object {
                "id": "nginx/nginx@1.19.2-r1",
                "info": Object {
                  "name": "nginx/nginx",
                  "version": "1.19.2-r1",
                },
              },
              Object {
                "id": "nginx-module-geoip/nginx-module-geoip@1.19.2-r1",
                "info": Object {
                  "name": "nginx-module-geoip/nginx-module-geoip",
                  "version": "1.19.2-r1",
                },
              },
              Object {
                "id": "nginx-module-image-filter/nginx-module-image-filter@1.19.2-r1",
                "info": Object {
                  "name": "nginx-module-image-filter/nginx-module-image-filter",
                  "version": "1.19.2-r1",
                },
              },
              Object {
                "id": "pcre/pcre@8.44-r0",
                "info": Object {
                  "name": "pcre/pcre",
                  "version": "8.44-r0",
                },
              },
              Object {
                "id": "nginx-module-njs/nginx-module-njs@1.19.2.0.4.3-r1",
                "info": Object {
                  "name": "nginx-module-njs/nginx-module-njs",
                  "version": "1.19.2.0.4.3-r1",
                },
              },
              Object {
                "id": "nginx-module-xslt/nginx-module-xslt@1.19.2-r1",
                "info": Object {
                  "name": "nginx-module-xslt/nginx-module-xslt",
                  "version": "1.19.2-r1",
                },
              },
              Object {
                "id": "tzdata/tzdata@2020a-r0",
                "info": Object {
                  "name": "tzdata/tzdata",
                  "version": "2020a-r0",
                },
              },
            ],
            "schemaVersion": "1.3.0",
          },
          "type": "depGraph",
        },
        Object {
          "data": "sha256:068614b905e936c8385dfe78226faa7329858b327edb0236eadd1f1c7d0903f8",
          "type": "imageId",
        },
        Object {
          "data": Array [
            "b538f80385f9b48122e3da068c932a96ea5018afa3c7be79da00437414bd18cd/layer.tar",
            "66942047c7b3b1e4cfa170855e791fffb10e70e4061f5d20cdf3d712b1d9ba79/layer.tar",
            "03513b8933dacfb95cb1d00fc4846b0c28686aba484b00ef5409ae368e83c922/layer.tar",
            "d81823b5c9b536108c620f3c7b371517e997a25caa8495ef8cb040a17a1eb8be/layer.tar",
            "86ade662cda571f878ef3c7f9a69bb8649b60974fa25680948cad5ab16cac36b/layer.tar",
          ],
          "type": "imageLayers",
        },
        Object {
          "data": Object {
            "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>",
          },
          "type": "imageLabels",
        },
        Object {
          "data": "2020-08-14T01:03:03.653764393Z",
          "type": "imageCreationTime",
        },
        Object {
          "data": Array [
            "sha256:e2f13739ad415e6f8d9f73253910e4984563a1ec98bd0e0af715fc2c74dfe84b",
            "sha256:00e7d2cc2a5924431554f4bf5f0661d4c10e2b83b7cc7b3ae49273a219b16f45",
            "sha256:bc622f3d17f980364ca082b5d9a29bb42d67c95422090b3c42f63a2361e9e5da",
            "sha256:badb783a0ee342fd46af0cc96b7fcc11d210270e5d6ee042d7ce0d43c32d2b3e",
            "sha256:f7c06e5938e23ff2912b3147d72ed0d2496d260e24a9b1de2c0b479a5b0e4b79",
          ],
          "type": "rootFs",
        },
        Object {
          "data": "Alpine Linux v3.12",
          "type": "imageOsReleasePrettyName",
        },
        Object {
          "data": Object {
            "dockerfileLayers": Object {
              "L2Jpbi9zaCAtYyBzZXQgLXggICAgICYmIGFkZGdyb3VwIC1nIDEwMSAtUyBuZ2lueCAgICAgJiYgYWRkdXNlciAtUyAtRCAtSCAtdSAxMDEgLWggL3Zhci9jYWNoZS9uZ2lueCAtcyAvc2Jpbi9ub2xvZ2luIC1HIG5naW54IC1nIG5naW54IG5naW54ICAgICAmJiBhcGtBcmNoPSIkKGNhdCAvZXRjL2Fway9hcmNoKSIgICAgICYmIG5naW54UGFja2FnZXM9IiAgICAgICAgIG5naW54PSR7TkdJTlhfVkVSU0lPTn0tciR7UEtHX1JFTEVBU0V9ICAgICAgICAgbmdpbngtbW9kdWxlLXhzbHQ9JHtOR0lOWF9WRVJTSU9OfS1yJHtQS0dfUkVMRUFTRX0gICAgICAgICBuZ2lueC1tb2R1bGUtZ2VvaXA9JHtOR0lOWF9WRVJTSU9OfS1yJHtQS0dfUkVMRUFTRX0gICAgICAgICBuZ2lueC1tb2R1bGUtaW1hZ2UtZmlsdGVyPSR7TkdJTlhfVkVSU0lPTn0tciR7UEtHX1JFTEVBU0V9ICAgICAgICAgbmdpbngtbW9kdWxlLW5qcz0ke05HSU5YX1ZFUlNJT059LiR7TkpTX1ZFUlNJT059LXIke1BLR19SRUxFQVNFfSAgICAgIiAgICAgJiYgY2FzZSAiJGFwa0FyY2giIGluICAgICAgICAgeDg2XzY0KSAgICAgICAgICAgICBzZXQgLXggICAgICAgICAgICAgJiYgS0VZX1NIQTUxMj0iZTdmYTgzMDM5MjNkOWI5NWRiMzdhNzdhZDQ2YzY4ZmQ0NzU1ZmY5MzVkMGE1MzRkMjZlYmE4M2RlMTkzYzc2MTY2YzY4YmZlN2Y2NTQ3MWJmODg4MTAwNGVmNGFhNmRmM2UzNDY4OWMzMDU2NjI3NTBjMDE3MmZjYTVkODU1MmEgKnN0ZGluIiAgICAgICAgICAgICAmJiBhcGsgYWRkIC0tbm8tY2FjaGUgLS12aXJ0dWFsIC5jZXJ0LWRlcHMgICAgICAgICAgICAgICAgIG9wZW5zc2wgICAgICAgICAgICAgJiYgd2dldCAtTyAvdG1wL25naW54X3NpZ25pbmcucnNhLnB1YiBodHRwczovL25naW54Lm9yZy9rZXlzL25naW54X3NpZ25pbmcucnNhLnB1YiAgICAgICAgICAgICAmJiBpZiBbICIkKG9wZW5zc2wgcnNhIC1wdWJpbiAtaW4gL3RtcC9uZ2lueF9zaWduaW5nLnJzYS5wdWIgLXRleHQgLW5vb3V0IHwgb3BlbnNzbCBzaGE1MTIgLXIpIiA9ICIkS0VZX1NIQTUxMiIgXTsgdGhlbiAgICAgICAgICAgICAgICAgZWNobyAia2V5IHZlcmlmaWNhdGlvbiBzdWNjZWVkZWQhIjsgICAgICAgICAgICAgICAgIG12IC90bXAvbmdpbnhfc2lnbmluZy5yc2EucHViIC9ldGMvYXBrL2tleXMvOyAgICAgICAgICAgICBlbHNlICAgICAgICAgICAgICAgICBlY2hvICJrZXkgdmVyaWZpY2F0aW9uIGZhaWxlZCEiOyAgICAgICAgICAgICAgICAgZXhpdCAxOyAgICAgICAgICAgICBmaSAgICAgICAgICAgICAmJiBhcGsgZGVsIC5jZXJ0LWRlcHMgICAgICAgICAgICAgJiYgYXBrIGFkZCAtWCAiaHR0cHM6Ly9uZ2lueC5vcmcvcGFja2FnZXMvbWFpbmxpbmUvYWxwaW5lL3YkKGVncmVwIC1vICdeWzAtOV0rXC5bMC05XSsnIC9ldGMvYWxwaW5lLXJlbGVhc2UpL21haW4iIC0tbm8tY2FjaGUgJG5naW54UGFja2FnZXMgICAgICAgICAgICAgOzsgICAgICAgICAqKSAgICAgICAgICAgICBzZXQgLXggICAgICAgICAgICAgJiYgdGVtcERpcj0iJChta3RlbXAgLWQpIiAgICAgICAgICAgICAmJiBjaG93biBub2JvZHk6bm9ib2R5ICR0ZW1wRGlyICAgICAgICAgICAgICYmIGFwayBhZGQgLS1uby1jYWNoZSAtLXZpcnR1YWwgLmJ1aWxkLWRlcHMgICAgICAgICAgICAgICAgIGdjYyAgICAgICAgICAgICAgICAgbGliYy1kZXYgICAgICAgICAgICAgICAgIG1ha2UgICAgICAgICAgICAgICAgIG9wZW5zc2wtZGV2ICAgICAgICAgICAgICAgICBwY3JlLWRldiAgICAgICAgICAgICAgICAgemxpYi1kZXYgICAgICAgICAgICAgICAgIGxpbnV4LWhlYWRlcnMgICAgICAgICAgICAgICAgIGxpYnhzbHQtZGV2ICAgICAgICAgICAgICAgICBnZC1kZXYgICAgICAgICAgICAgICAgIGdlb2lwLWRldiAgICAgICAgICAgICAgICAgcGVybC1kZXYgICAgICAgICAgICAgICAgIGxpYmVkaXQtZGV2ICAgICAgICAgICAgICAgICBtZXJjdXJpYWwgICAgICAgICAgICAgICAgIGJhc2ggICAgICAgICAgICAgICAgIGFscGluZS1zZGsgICAgICAgICAgICAgICAgIGZpbmR1dGlscyAgICAgICAgICAgICAmJiBzdSBub2JvZHkgLXMgL2Jpbi9zaCAtYyAiICAgICAgICAgICAgICAgICBleHBvcnQgSE9NRT0ke3RlbXBEaXJ9ICAgICAgICAgICAgICAgICAmJiBjZCAke3RlbXBEaXJ9ICAgICAgICAgICAgICAgICAmJiBoZyBjbG9uZSBodHRwczovL2hnLm5naW54Lm9yZy9wa2ctb3NzICAgICAgICAgICAgICAgICAmJiBjZCBwa2ctb3NzICAgICAgICAgICAgICAgICAmJiBoZyB1cCAke05HSU5YX1ZFUlNJT059LSR7UEtHX1JFTEVBU0V9ICAgICAgICAgICAgICAgICAmJiBjZCBhbHBpbmUgICAgICAgICAgICAgICAgICYmIG1ha2UgYWxsICAgICAgICAgICAgICAgICAmJiBhcGsgaW5kZXggLW8gJHt0ZW1wRGlyfS9wYWNrYWdlcy9hbHBpbmUvJHthcGtBcmNofS9BUEtJTkRFWC50YXIuZ3ogJHt0ZW1wRGlyfS9wYWNrYWdlcy9hbHBpbmUvJHthcGtBcmNofS8qLmFwayAgICAgICAgICAgICAgICAgJiYgYWJ1aWxkLXNpZ24gLWsgJHt0ZW1wRGlyfS8uYWJ1aWxkL2FidWlsZC1rZXkucnNhICR7dGVtcERpcn0vcGFja2FnZXMvYWxwaW5lLyR7YXBrQXJjaH0vQVBLSU5ERVgudGFyLmd6ICAgICAgICAgICAgICAgICAiICAgICAgICAgICAgICYmIGNwICR7dGVtcERpcn0vLmFidWlsZC9hYnVpbGQta2V5LnJzYS5wdWIgL2V0Yy9hcGsva2V5cy8gICAgICAgICAgICAgJiYgYXBrIGRlbCAuYnVpbGQtZGVwcyAgICAgICAgICAgICAmJiBhcGsgYWRkIC1YICR7dGVtcERpcn0vcGFja2FnZXMvYWxwaW5lLyAtLW5vLWNhY2hlICRuZ2lueFBhY2thZ2VzICAgICAgICAgICAgIDs7ICAgICBlc2FjICAgICAmJiBpZiBbIC1uICIkdGVtcERpciIgXTsgdGhlbiBybSAtcmYgIiR0ZW1wRGlyIjsgZmkgICAgICYmIGlmIFsgLW4gIi9ldGMvYXBrL2tleXMvYWJ1aWxkLWtleS5yc2EucHViIiBdOyB0aGVuIHJtIC1mIC9ldGMvYXBrL2tleXMvYWJ1aWxkLWtleS5yc2EucHViOyBmaSAgICAgJiYgaWYgWyAtbiAiL2V0Yy9hcGsva2V5cy9uZ2lueF9zaWduaW5nLnJzYS5wdWIiIF07IHRoZW4gcm0gLWYgL2V0Yy9hcGsva2V5cy9uZ2lueF9zaWduaW5nLnJzYS5wdWI7IGZpICAgICAmJiBhcGsgYWRkIC0tbm8tY2FjaGUgLS12aXJ0dWFsIC5nZXR0ZXh0IGdldHRleHQgICAgICYmIG12IC91c3IvYmluL2VudnN1YnN0IC90bXAvICAgICAgICAgJiYgcnVuRGVwcz0iJCggICAgICAgICBzY2FuZWxmIC0tbmVlZGVkIC0tbm9iYW5uZXIgL3RtcC9lbnZzdWJzdCAgICAgICAgICAgICB8IGF3ayAneyBnc3ViKC8sLywgIlxuc286IiwgJDIpOyBwcmludCAic286IiAkMiB9JyAgICAgICAgICAgICB8IHNvcnQgLXUgICAgICAgICAgICAgfCB4YXJncyAtciBhcGsgaW5mbyAtLWluc3RhbGxlZCAgICAgICAgICAgICB8IHNvcnQgLXUgICAgICkiICAgICAmJiBhcGsgYWRkIC0tbm8tY2FjaGUgJHJ1bkRlcHMgICAgICYmIGFwayBkZWwgLmdldHRleHQgICAgICYmIG12IC90bXAvZW52c3Vic3QgL3Vzci9sb2NhbC9iaW4vICAgICAmJiBhcGsgYWRkIC0tbm8tY2FjaGUgdHpkYXRhICAgICAmJiBhcGsgYWRkIC0tbm8tY2FjaGUgY3VybCBjYS1jZXJ0aWZpY2F0ZXMgICAgICYmIGxuIC1zZiAvZGV2L3N0ZG91dCAvdmFyL2xvZy9uZ2lueC9hY2Nlc3MubG9nICAgICAmJiBsbiAtc2YgL2Rldi9zdGRlcnIgL3Zhci9sb2cvbmdpbngvZXJyb3IubG9nICAgICAmJiBta2RpciAvZG9ja2VyLWVudHJ5cG9pbnQuZA==": Object {
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
            },
            "dockerfilePackages": Object {
              "\\"https://nginx.org/packages/mainline/alpine/v$(egrep": Object {
                "installCommand": "apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "'^[0-9]+\\\\.[0-9]+'": Object {
                "installCommand": "apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              ".build-deps": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers libxslt-dev gd-dev geoip-dev perl-dev libedit-dev mercurial bash alpine-sdk findutils",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              ".cert-deps": Object {
                "installCommand": "apk add --no-cache --virtual .cert-deps openssl",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              ".gettext": Object {
                "installCommand": "apk add --no-cache --virtual .gettext gettext",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "/etc/alpine-release)/main\\"": Object {
                "installCommand": "apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "alpine-sdk": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers libxslt-dev gd-dev geoip-dev perl-dev libedit-dev mercurial bash alpine-sdk findutils",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "bash": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers libxslt-dev gd-dev geoip-dev perl-dev libedit-dev mercurial bash alpine-sdk findutils",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "busybox": Object {
                "installCommand": "apk add --no-cache curl ca-certificates",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "ca-certificates": Object {
                "installCommand": "apk add --no-cache curl ca-certificates",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "curl": Object {
                "installCommand": "apk add --no-cache curl ca-certificates",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "findutils": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers libxslt-dev gd-dev geoip-dev perl-dev libedit-dev mercurial bash alpine-sdk findutils",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "gcc": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers libxslt-dev gd-dev geoip-dev perl-dev libedit-dev mercurial bash alpine-sdk findutils",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "gd-dev": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers libxslt-dev gd-dev geoip-dev perl-dev libedit-dev mercurial bash alpine-sdk findutils",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "geoip-dev": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers libxslt-dev gd-dev geoip-dev perl-dev libedit-dev mercurial bash alpine-sdk findutils",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "gettext": Object {
                "installCommand": "apk add --no-cache --virtual .gettext gettext",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "libc-dev": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers libxslt-dev gd-dev geoip-dev perl-dev libedit-dev mercurial bash alpine-sdk findutils",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "libedit-dev": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers libxslt-dev gd-dev geoip-dev perl-dev libedit-dev mercurial bash alpine-sdk findutils",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "libxslt-dev": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers libxslt-dev gd-dev geoip-dev perl-dev libedit-dev mercurial bash alpine-sdk findutils",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "linux-headers": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers libxslt-dev gd-dev geoip-dev perl-dev libedit-dev mercurial bash alpine-sdk findutils",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "make": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers libxslt-dev gd-dev geoip-dev perl-dev libedit-dev mercurial bash alpine-sdk findutils",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "mercurial": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers libxslt-dev gd-dev geoip-dev perl-dev libedit-dev mercurial bash alpine-sdk findutils",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "musl": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers libxslt-dev gd-dev geoip-dev perl-dev libedit-dev mercurial bash alpine-sdk findutils",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "nghttp2": Object {
                "installCommand": "apk add --no-cache curl ca-certificates",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "nginxPackages": Object {
                "installCommand": "apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "openssl": Object {
                "installCommand": "apk add --no-cache curl ca-certificates",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "openssl-dev": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers libxslt-dev gd-dev geoip-dev perl-dev libedit-dev mercurial bash alpine-sdk findutils",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "pcre-dev": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers libxslt-dev gd-dev geoip-dev perl-dev libedit-dev mercurial bash alpine-sdk findutils",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "perl-dev": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers libxslt-dev gd-dev geoip-dev perl-dev libedit-dev mercurial bash alpine-sdk findutils",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "runDeps": Object {
                "installCommand": "apk add --no-cache $runDeps",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "tzdata": Object {
                "installCommand": "apk add --no-cache tzdata",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "zlib": Object {
                "installCommand": "apk add --no-cache curl ca-certificates",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "zlib-dev": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers libxslt-dev gd-dev geoip-dev perl-dev libedit-dev mercurial bash alpine-sdk findutils",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
              "{tempDir}/packages/alpine/": Object {
                "installCommand": "apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages",
                "instruction": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\\"$(cat /etc/apk/arch)\\"     && nginxPackages=\\"         nginx=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-xslt=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-geoip=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-image-filter=\${NGINX_VERSION}-r\${PKG_RELEASE}         nginx-module-njs=\${NGINX_VERSION}.\${NJS_VERSION}-r\${PKG_RELEASE}     \\"     && case \\"$apkArch\\" in         x86_64)             set -x             && KEY_SHA512=\\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\\"             && apk add --no-cache --virtual .cert-deps                 openssl             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \\"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\\" = \\"$KEY_SHA512\\" ]; then                 echo \\"key verification succeeded!\\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \\"key verification failed!\\";                 exit 1;             fi             && apk del .cert-deps             && apk add -X \\"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\\\.[0-9]+' /etc/alpine-release)/main\\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\\"$(mktemp -d)\\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \\"                 export HOME=\${tempDir}                 && cd \${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 && cd pkg-oss                 && hg up \${NGINX_VERSION}-\${PKG_RELEASE}                 && cd alpine                 && make all                 && apk index -o \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz \${tempDir}/packages/alpine/\${apkArch}/*.apk                 && abuild-sign -k \${tempDir}/.abuild/abuild-key.rsa \${tempDir}/packages/alpine/\${apkArch}/APKINDEX.tar.gz                 \\"             && cp \${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X \${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && if [ -n \\"$tempDir\\" ]; then rm -rf \\"$tempDir\\"; fi     && if [ -n \\"/etc/apk/keys/abuild-key.rsa.pub\\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \\"/etc/apk/keys/nginx_signing.rsa.pub\\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \\"\\\\nso:\\", $2); print \\"so:\\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d",
              },
            },
          },
          "type": "autoDetectedUserInstructions",
        },
        Object {
          "data": Object {
            "names": Array [
              "arm64v8/nginx:1.19.2-alpine",
              "arm64v8/nginx@sha256:8d99a3e08d0f07ca0fdf1db5c56b1f30d9cc97af5458ecfac604b8887cba289a",
            ],
          },
          "type": "imageNames",
        },
      ],
      "identity": Object {
        "args": Object {
          "platform": "linux/arm64",
        },
        "type": "apk",
      },
      "target": Object {
        "image": "docker-image|arm64v8/nginx",
      },
    },
  ],
}
`;
