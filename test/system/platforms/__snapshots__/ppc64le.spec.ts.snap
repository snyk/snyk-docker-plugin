// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PPC64 platform tests should correctly scan a PPC image and return platform: ppc64le 1`] = `
Object {
  "scanResults": Array [
    Object {
      "facts": Array [
        Object {
          "data": Object {
            "graph": Object {
              "nodes": Array [
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "acl/libacl@2.2.53-r0|1",
                    },
                    Object {
                      "nodeId": "alpine-baselayout/alpine-baselayout@3.2.0-r6",
                    },
                    Object {
                      "nodeId": "alpine-keys/alpine-keys@2.2-r0",
                    },
                    Object {
                      "nodeId": "apk-tools/apk-tools@2.10.5-r1",
                    },
                    Object {
                      "nodeId": "argon2/argon2-libs@20190702-r1",
                    },
                    Object {
                      "nodeId": "busybox/busybox@1.31.1-r16|2",
                    },
                    Object {
                      "nodeId": "busybox/ssl_client@1.31.1-r16",
                    },
                    Object {
                      "nodeId": "ca-certificates/ca-certificates@20191127-r3|1",
                    },
                    Object {
                      "nodeId": "ca-certificates/ca-certificates-bundle@20191127-r2",
                    },
                    Object {
                      "nodeId": "curl/curl@7.69.1-r0",
                    },
                    Object {
                      "nodeId": "curl/libcurl@7.69.1-r1|2",
                    },
                    Object {
                      "nodeId": "libc-dev/libc-utils@0.7.2-r3",
                    },
                    Object {
                      "nodeId": "libedit/libedit@20191231.3.1-r0",
                    },
                    Object {
                      "nodeId": "libsodium/libsodium@1.0.18-r0",
                    },
                    Object {
                      "nodeId": "libtls-standalone/libtls-standalone@2.9.1-r1|2",
                    },
                    Object {
                      "nodeId": "libxml2/libxml2@2.9.10-r5",
                    },
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "musl/musl-utils@1.1.24-r8|2",
                    },
                    Object {
                      "nodeId": "ncurses/ncurses-libs@6.2_p20200523-r0|2",
                    },
                    Object {
                      "nodeId": "ncurses/ncurses-terminfo-base@6.2_p20200523-r0",
                    },
                    Object {
                      "nodeId": "nghttp2/nghttp2-libs@1.41.0-r0|2",
                    },
                    Object {
                      "nodeId": "oniguruma/oniguruma@6.9.5-r1",
                    },
                    Object {
                      "nodeId": "openssl/libcrypto1.1@1.1.1g-r0|2",
                    },
                    Object {
                      "nodeId": "openssl/libssl1.1@1.1.1g-r0|2",
                    },
                    Object {
                      "nodeId": "openssl/openssl@1.1.1g-r0|2",
                    },
                    Object {
                      "nodeId": "pax-utils/scanelf@1.2.6-r0|2",
                    },
                    Object {
                      "nodeId": "sqlite/sqlite-libs@3.32.1-r0",
                    },
                    Object {
                      "nodeId": "tar/tar@1.32-r1",
                    },
                    Object {
                      "nodeId": "xz/xz@5.2.5-r0",
                    },
                    Object {
                      "nodeId": "xz/xz-libs@5.2.5-r0|2",
                    },
                    Object {
                      "nodeId": "zlib/zlib@1.2.11-r3|2",
                    },
                  ],
                  "nodeId": "root-node",
                  "pkgId": "docker-image|ppc64le/php@8.0.0rc1-fpm-alpine3.12",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "musl/musl@1.1.24-r9",
                  "pkgId": "musl/musl@1.1.24-r9",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "acl/libacl@2.2.53-r0|1",
                  "pkgId": "acl/libacl@2.2.53-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "acl/libacl@2.2.53-r0|2",
                  "pkgId": "acl/libacl@2.2.53-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "busybox/busybox@1.31.1-r16|1",
                  "pkgId": "busybox/busybox@1.31.1-r16",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "busybox/busybox@1.31.1-r16|2",
                  "pkgId": "busybox/busybox@1.31.1-r16",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "busybox/busybox@1.31.1-r16|1",
                    },
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "alpine-baselayout/alpine-baselayout@3.2.0-r6",
                  "pkgId": "alpine-baselayout/alpine-baselayout@3.2.0-r6",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "alpine-keys/alpine-keys@2.2-r0",
                  "pkgId": "alpine-keys/alpine-keys@2.2-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "openssl/libcrypto1.1@1.1.1g-r0|1",
                  "pkgId": "openssl/libcrypto1.1@1.1.1g-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "openssl/libcrypto1.1@1.1.1g-r0|2",
                  "pkgId": "openssl/libcrypto1.1@1.1.1g-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "openssl/libssl1.1@1.1.1g-r0|1",
                  "pkgId": "openssl/libssl1.1@1.1.1g-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "openssl/libcrypto1.1@1.1.1g-r0|1",
                    },
                  ],
                  "nodeId": "openssl/libssl1.1@1.1.1g-r0|2",
                  "pkgId": "openssl/libssl1.1@1.1.1g-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "zlib/zlib@1.2.11-r3|1",
                  "pkgId": "zlib/zlib@1.2.11-r3",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "zlib/zlib@1.2.11-r3|2",
                  "pkgId": "zlib/zlib@1.2.11-r3",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "openssl/libcrypto1.1@1.1.1g-r0|1",
                    },
                    Object {
                      "nodeId": "openssl/libssl1.1@1.1.1g-r0|1",
                    },
                    Object {
                      "nodeId": "zlib/zlib@1.2.11-r3|1",
                    },
                  ],
                  "nodeId": "apk-tools/apk-tools@2.10.5-r1",
                  "pkgId": "apk-tools/apk-tools@2.10.5-r1",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "argon2/argon2-libs@20190702-r1",
                  "pkgId": "argon2/argon2-libs@20190702-r1",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "libtls-standalone/libtls-standalone@2.9.1-r1|1",
                  "pkgId": "libtls-standalone/libtls-standalone@2.9.1-r1",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "ca-certificates/ca-certificates-bundle@20191127-r2",
                    },
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "openssl/libcrypto1.1@1.1.1g-r0|1",
                    },
                    Object {
                      "nodeId": "openssl/libssl1.1@1.1.1g-r0|1",
                    },
                  ],
                  "nodeId": "libtls-standalone/libtls-standalone@2.9.1-r1|2",
                  "pkgId": "libtls-standalone/libtls-standalone@2.9.1-r1",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "libtls-standalone/libtls-standalone@2.9.1-r1|1",
                    },
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "busybox/ssl_client@1.31.1-r16",
                  "pkgId": "busybox/ssl_client@1.31.1-r16",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "openssl/libcrypto1.1@1.1.1g-r0|1",
                    },
                    Object {
                      "nodeId": "openssl/libssl1.1@1.1.1g-r0|1",
                    },
                  ],
                  "nodeId": "openssl/openssl@1.1.1g-r0|1",
                  "pkgId": "openssl/openssl@1.1.1g-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "openssl/openssl@1.1.1g-r0|2",
                  "pkgId": "openssl/openssl@1.1.1g-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "busybox/busybox@1.31.1-r16|1",
                    },
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "openssl/libcrypto1.1@1.1.1g-r0|1",
                    },
                    Object {
                      "nodeId": "openssl/openssl@1.1.1g-r0|1",
                    },
                  ],
                  "nodeId": "ca-certificates/ca-certificates@20191127-r3|1",
                  "pkgId": "ca-certificates/ca-certificates@20191127-r3",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "ca-certificates/ca-certificates@20191127-r3|2",
                  "pkgId": "ca-certificates/ca-certificates@20191127-r3",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "ca-certificates/ca-certificates-bundle@20191127-r2",
                  "pkgId": "ca-certificates/ca-certificates-bundle@20191127-r2",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "nghttp2/nghttp2-libs@1.41.0-r0|1",
                  "pkgId": "nghttp2/nghttp2-libs@1.41.0-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "nghttp2/nghttp2-libs@1.41.0-r0|2",
                  "pkgId": "nghttp2/nghttp2-libs@1.41.0-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "ca-certificates/ca-certificates@20191127-r3|2",
                    },
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "nghttp2/nghttp2-libs@1.41.0-r0|1",
                    },
                    Object {
                      "nodeId": "openssl/libcrypto1.1@1.1.1g-r0|1",
                    },
                    Object {
                      "nodeId": "openssl/libssl1.1@1.1.1g-r0|1",
                    },
                    Object {
                      "nodeId": "zlib/zlib@1.2.11-r3|1",
                    },
                  ],
                  "nodeId": "curl/libcurl@7.69.1-r1|1",
                  "pkgId": "curl/libcurl@7.69.1-r1",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "curl/libcurl@7.69.1-r1|2",
                  "pkgId": "curl/libcurl@7.69.1-r1",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "ca-certificates/ca-certificates@20191127-r3|2",
                    },
                    Object {
                      "nodeId": "curl/libcurl@7.69.1-r1|1",
                    },
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "zlib/zlib@1.2.11-r3|1",
                    },
                  ],
                  "nodeId": "curl/curl@7.69.1-r0",
                  "pkgId": "curl/curl@7.69.1-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "musl/musl-utils@1.1.24-r8|1",
                  "pkgId": "musl/musl-utils@1.1.24-r8",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "pax-utils/scanelf@1.2.6-r0|1",
                    },
                  ],
                  "nodeId": "musl/musl-utils@1.1.24-r8|2",
                  "pkgId": "musl/musl-utils@1.1.24-r8",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl-utils@1.1.24-r8|1",
                    },
                  ],
                  "nodeId": "libc-dev/libc-utils@0.7.2-r3",
                  "pkgId": "libc-dev/libc-utils@0.7.2-r3",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "ncurses/ncurses-libs@6.2_p20200523-r0|1",
                  "pkgId": "ncurses/ncurses-libs@6.2_p20200523-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "ncurses/ncurses-terminfo-base@6.2_p20200523-r0",
                    },
                  ],
                  "nodeId": "ncurses/ncurses-libs@6.2_p20200523-r0|2",
                  "pkgId": "ncurses/ncurses-libs@6.2_p20200523-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "ncurses/ncurses-libs@6.2_p20200523-r0|1",
                    },
                  ],
                  "nodeId": "libedit/libedit@20191231.3.1-r0",
                  "pkgId": "libedit/libedit@20191231.3.1-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "libsodium/libsodium@1.0.18-r0",
                  "pkgId": "libsodium/libsodium@1.0.18-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "xz/xz-libs@5.2.5-r0|1",
                  "pkgId": "xz/xz-libs@5.2.5-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "xz/xz-libs@5.2.5-r0|2",
                  "pkgId": "xz/xz-libs@5.2.5-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "xz/xz-libs@5.2.5-r0|1",
                    },
                    Object {
                      "nodeId": "zlib/zlib@1.2.11-r3|1",
                    },
                  ],
                  "nodeId": "libxml2/libxml2@2.9.10-r5",
                  "pkgId": "libxml2/libxml2@2.9.10-r5",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "pax-utils/scanelf@1.2.6-r0|1",
                  "pkgId": "pax-utils/scanelf@1.2.6-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "pax-utils/scanelf@1.2.6-r0|2",
                  "pkgId": "pax-utils/scanelf@1.2.6-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "ncurses/ncurses-terminfo-base@6.2_p20200523-r0",
                  "pkgId": "ncurses/ncurses-terminfo-base@6.2_p20200523-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "oniguruma/oniguruma@6.9.5-r1",
                  "pkgId": "oniguruma/oniguruma@6.9.5-r1",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "sqlite/sqlite-libs@3.32.1-r0",
                  "pkgId": "sqlite/sqlite-libs@3.32.1-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "acl/libacl@2.2.53-r0|2",
                    },
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "tar/tar@1.32-r1",
                  "pkgId": "tar/tar@1.32-r1",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "xz/xz-libs@5.2.5-r0|1",
                    },
                  ],
                  "nodeId": "xz/xz@5.2.5-r0",
                  "pkgId": "xz/xz@5.2.5-r0",
                },
              ],
              "rootNodeId": "root-node",
            },
            "pkgManager": Object {
              "name": "apk",
              "repositories": Array [
                Object {
                  "alias": "alpine:3.12.0",
                },
              ],
            },
            "pkgs": Array [
              Object {
                "id": "docker-image|ppc64le/php@8.0.0rc1-fpm-alpine3.12",
                "info": Object {
                  "name": "docker-image|ppc64le/php",
                  "version": "8.0.0rc1-fpm-alpine3.12",
                },
              },
              Object {
                "id": "musl/musl@1.1.24-r9",
                "info": Object {
                  "name": "musl/musl",
                  "version": "1.1.24-r9",
                },
              },
              Object {
                "id": "acl/libacl@2.2.53-r0",
                "info": Object {
                  "name": "acl/libacl",
                  "version": "2.2.53-r0",
                },
              },
              Object {
                "id": "busybox/busybox@1.31.1-r16",
                "info": Object {
                  "name": "busybox/busybox",
                  "version": "1.31.1-r16",
                },
              },
              Object {
                "id": "alpine-baselayout/alpine-baselayout@3.2.0-r6",
                "info": Object {
                  "name": "alpine-baselayout/alpine-baselayout",
                  "version": "3.2.0-r6",
                },
              },
              Object {
                "id": "alpine-keys/alpine-keys@2.2-r0",
                "info": Object {
                  "name": "alpine-keys/alpine-keys",
                  "version": "2.2-r0",
                },
              },
              Object {
                "id": "openssl/libcrypto1.1@1.1.1g-r0",
                "info": Object {
                  "name": "openssl/libcrypto1.1",
                  "version": "1.1.1g-r0",
                },
              },
              Object {
                "id": "openssl/libssl1.1@1.1.1g-r0",
                "info": Object {
                  "name": "openssl/libssl1.1",
                  "version": "1.1.1g-r0",
                },
              },
              Object {
                "id": "zlib/zlib@1.2.11-r3",
                "info": Object {
                  "name": "zlib/zlib",
                  "version": "1.2.11-r3",
                },
              },
              Object {
                "id": "apk-tools/apk-tools@2.10.5-r1",
                "info": Object {
                  "name": "apk-tools/apk-tools",
                  "version": "2.10.5-r1",
                },
              },
              Object {
                "id": "argon2/argon2-libs@20190702-r1",
                "info": Object {
                  "name": "argon2/argon2-libs",
                  "version": "20190702-r1",
                },
              },
              Object {
                "id": "libtls-standalone/libtls-standalone@2.9.1-r1",
                "info": Object {
                  "name": "libtls-standalone/libtls-standalone",
                  "version": "2.9.1-r1",
                },
              },
              Object {
                "id": "busybox/ssl_client@1.31.1-r16",
                "info": Object {
                  "name": "busybox/ssl_client",
                  "version": "1.31.1-r16",
                },
              },
              Object {
                "id": "openssl/openssl@1.1.1g-r0",
                "info": Object {
                  "name": "openssl/openssl",
                  "version": "1.1.1g-r0",
                },
              },
              Object {
                "id": "ca-certificates/ca-certificates@20191127-r3",
                "info": Object {
                  "name": "ca-certificates/ca-certificates",
                  "version": "20191127-r3",
                },
              },
              Object {
                "id": "ca-certificates/ca-certificates-bundle@20191127-r2",
                "info": Object {
                  "name": "ca-certificates/ca-certificates-bundle",
                  "version": "20191127-r2",
                },
              },
              Object {
                "id": "nghttp2/nghttp2-libs@1.41.0-r0",
                "info": Object {
                  "name": "nghttp2/nghttp2-libs",
                  "version": "1.41.0-r0",
                },
              },
              Object {
                "id": "curl/libcurl@7.69.1-r1",
                "info": Object {
                  "name": "curl/libcurl",
                  "version": "7.69.1-r1",
                },
              },
              Object {
                "id": "curl/curl@7.69.1-r0",
                "info": Object {
                  "name": "curl/curl",
                  "version": "7.69.1-r0",
                },
              },
              Object {
                "id": "musl/musl-utils@1.1.24-r8",
                "info": Object {
                  "name": "musl/musl-utils",
                  "version": "1.1.24-r8",
                },
              },
              Object {
                "id": "libc-dev/libc-utils@0.7.2-r3",
                "info": Object {
                  "name": "libc-dev/libc-utils",
                  "version": "0.7.2-r3",
                },
              },
              Object {
                "id": "ncurses/ncurses-libs@6.2_p20200523-r0",
                "info": Object {
                  "name": "ncurses/ncurses-libs",
                  "version": "6.2_p20200523-r0",
                },
              },
              Object {
                "id": "libedit/libedit@20191231.3.1-r0",
                "info": Object {
                  "name": "libedit/libedit",
                  "version": "20191231.3.1-r0",
                },
              },
              Object {
                "id": "libsodium/libsodium@1.0.18-r0",
                "info": Object {
                  "name": "libsodium/libsodium",
                  "version": "1.0.18-r0",
                },
              },
              Object {
                "id": "xz/xz-libs@5.2.5-r0",
                "info": Object {
                  "name": "xz/xz-libs",
                  "version": "5.2.5-r0",
                },
              },
              Object {
                "id": "libxml2/libxml2@2.9.10-r5",
                "info": Object {
                  "name": "libxml2/libxml2",
                  "version": "2.9.10-r5",
                },
              },
              Object {
                "id": "pax-utils/scanelf@1.2.6-r0",
                "info": Object {
                  "name": "pax-utils/scanelf",
                  "version": "1.2.6-r0",
                },
              },
              Object {
                "id": "ncurses/ncurses-terminfo-base@6.2_p20200523-r0",
                "info": Object {
                  "name": "ncurses/ncurses-terminfo-base",
                  "version": "6.2_p20200523-r0",
                },
              },
              Object {
                "id": "oniguruma/oniguruma@6.9.5-r1",
                "info": Object {
                  "name": "oniguruma/oniguruma",
                  "version": "6.9.5-r1",
                },
              },
              Object {
                "id": "sqlite/sqlite-libs@3.32.1-r0",
                "info": Object {
                  "name": "sqlite/sqlite-libs",
                  "version": "3.32.1-r0",
                },
              },
              Object {
                "id": "tar/tar@1.32-r1",
                "info": Object {
                  "name": "tar/tar",
                  "version": "1.32-r1",
                },
              },
              Object {
                "id": "xz/xz@5.2.5-r0",
                "info": Object {
                  "name": "xz/xz",
                  "version": "5.2.5-r0",
                },
              },
            ],
            "schemaVersion": "1.3.0",
          },
          "type": "depGraph",
        },
        Object {
          "data": "sha256:fe64ed5afe5d5b2838dea115bd245cadccf97fdc8f3b9e90ccb3a4cc235cf5bc",
          "type": "imageId",
        },
        Object {
          "data": Array [
            "5077f8601dceb5744d875d7740ebc203f674b108a0188f3a31e292b21a4bee64/layer.tar",
            "46f98eb9049c4fcbaa1cf16ddb44aaf910a89a5471dc303198251fa25bc2a1ef/layer.tar",
            "e50cdb8e03fc1b19217cd9f80b86142d090ad3e818795b339ea4d9ef9b74555f/layer.tar",
            "8b4466e085b12b265fb47397c7c105fd7d78a5883beef49ab9f386393c4c3dae/layer.tar",
            "3da6cf5673f6c68a98cb0fff683ae97cadd61fc243467e67f8b7ce6f431da154/layer.tar",
            "82fa271059acb56e3b8e98a6da57f60c4221ed049884ea76885b168864cd084a/layer.tar",
            "056a460c2e9c1813b18c006e67241dd2aab28d6163009bc2dc6707415c70ee55/layer.tar",
            "fdfa909abe06743a2e2e8472539d26f7169a54a08f5808ffbf60499893e0ca29/layer.tar",
            "821c123f6ebfd3e30fd422ad888483dfe8b325dc85556e655af53a6fb389762f/layer.tar",
            "05f53b369b658f1bdcfb30c89c3fef3d68db543600596375f862fbcf3c083557/layer.tar",
          ],
          "type": "imageLayers",
        },
        Object {
          "data": "2020-10-02T02:54:58.006860434Z",
          "type": "imageCreationTime",
        },
        Object {
          "data": Array [
            "sha256:5a8b4ad4d2fdb56c18f5b1e532f17ef33e6404c83dc1581a3adddf99dcd9d51c",
            "sha256:76daf675c598f6bb12a85310d25f6cc070e3c4fd460b4b396ba9ee1dc52356ef",
            "sha256:cb0f674aa825b8a225b4f2c34828aa63cf0f5d1a7440f2dc68c9d3549c03fad8",
            "sha256:0c9a3fd39ef3b7c4aba9a5f2ac9f91f060f312f47e0dccc4614b4c9ce96213f3",
            "sha256:8587af6bdad52b7756699d14d8f55b340c5fe3a0b0c0c75636f60c6b86ab0856",
            "sha256:1a514508a2a4053c7156d393288e658201f4a9526423cac2ab5c48d23cd46546",
            "sha256:78838c1f02b21ed98005126845be133aa3e1c8921599714c5b7950c3d1630e02",
            "sha256:9f334011825722d45a7811645310ae610f85369ac89b1133bdf2bc558f499cd5",
            "sha256:0a43bfef3e6f9c1725b5049f5a4ada18329f4e3ebb6d0105aaab2995b34b0cb9",
            "sha256:7786a29a020c1d1a81c931d2cdf4ae73bab1227b66ccf08c0ebbc3eadfbdde30",
          ],
          "type": "rootFs",
        },
        Object {
          "data": "Alpine Linux v3.12",
          "type": "imageOsReleasePrettyName",
        },
        Object {
          "data": Object {
            "dockerfileLayers": Object {
              "L2Jpbi9zaCAtYyBzZXQgLWV1eDsgCQlhcGsgYWRkIC0tbm8tY2FjaGUgLS12aXJ0dWFsIC5mZXRjaC1kZXBzIGdudXBnOyAJCW1rZGlyIC1wIC91c3Ivc3JjOyAJY2QgL3Vzci9zcmM7IAkJY3VybCAtZnNTTCAtbyBwaHAudGFyLnh6ICIkUEhQX1VSTCI7IAkJaWYgWyAtbiAiJFBIUF9TSEEyNTYiIF07IHRoZW4gCQllY2hvICIkUEhQX1NIQTI1NiAqcGhwLnRhci54eiIgfCBzaGEyNTZzdW0gLWMgLTsgCWZpOyAJaWYgWyAtbiAiJFBIUF9NRDUiIF07IHRoZW4gCQllY2hvICIkUEhQX01ENSAqcGhwLnRhci54eiIgfCBtZDVzdW0gLWMgLTsgCWZpOyAJCWlmIFsgLW4gIiRQSFBfQVNDX1VSTCIgXTsgdGhlbiAJCWN1cmwgLWZzU0wgLW8gcGhwLnRhci54ei5hc2MgIiRQSFBfQVNDX1VSTCI7IAkJZXhwb3J0IEdOVVBHSE9NRT0iJChta3RlbXAgLWQpIjsgCQlmb3Iga2V5IGluICRHUEdfS0VZUzsgZG8gCQkJZ3BnIC0tYmF0Y2ggLS1rZXlzZXJ2ZXIgaGEucG9vbC5za3Mta2V5c2VydmVycy5uZXQgLS1yZWN2LWtleXMgIiRrZXkiOyAJCWRvbmU7IAkJZ3BnIC0tYmF0Y2ggLS12ZXJpZnkgcGhwLnRhci54ei5hc2MgcGhwLnRhci54ejsgCQlncGdjb25mIC0ta2lsbCBhbGw7IAkJcm0gLXJmICIkR05VUEdIT01FIjsgCWZpOyAJCWFwayBkZWwgLS1uby1uZXR3b3JrIC5mZXRjaC1kZXBz": Object {
                "instruction": "/bin/sh -c set -eux; 		apk add --no-cache --virtual .fetch-deps gnupg; 		mkdir -p /usr/src; 	cd /usr/src; 		curl -fsSL -o php.tar.xz \\"$PHP_URL\\"; 		if [ -n \\"$PHP_SHA256\\" ]; then 		echo \\"$PHP_SHA256 *php.tar.xz\\" | sha256sum -c -; 	fi; 	if [ -n \\"$PHP_MD5\\" ]; then 		echo \\"$PHP_MD5 *php.tar.xz\\" | md5sum -c -; 	fi; 		if [ -n \\"$PHP_ASC_URL\\" ]; then 		curl -fsSL -o php.tar.xz.asc \\"$PHP_ASC_URL\\"; 		export GNUPGHOME=\\"$(mktemp -d)\\"; 		for key in $GPG_KEYS; do 			gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \\"$key\\"; 		done; 		gpg --batch --verify php.tar.xz.asc php.tar.xz; 		gpgconf --kill all; 		rm -rf \\"$GNUPGHOME\\"; 	fi; 		apk del --no-network .fetch-deps",
              },
              "L2Jpbi9zaCAtYyBzZXQgLWV1eDsgCWFwayBhZGQgLS1uby1jYWNoZSAtLXZpcnR1YWwgLmJ1aWxkLWRlcHMgCQkkUEhQSVpFX0RFUFMgCQlhcmdvbjItZGV2IAkJY29yZXV0aWxzIAkJY3VybC1kZXYgCQlsaWJlZGl0LWRldiAJCWxpYnNvZGl1bS1kZXYgCQlsaWJ4bWwyLWRldiAJCWxpbnV4LWhlYWRlcnMgCQlvbmlndXJ1bWEtZGV2IAkJb3BlbnNzbC1kZXYgCQlzcWxpdGUtZGV2IAk7IAkJZXhwb3J0IENGTEFHUz0iJFBIUF9DRkxBR1MiIAkJQ1BQRkxBR1M9IiRQSFBfQ1BQRkxBR1MiIAkJTERGTEFHUz0iJFBIUF9MREZMQUdTIiAJOyAJZG9ja2VyLXBocC1zb3VyY2UgZXh0cmFjdDsgCWNkIC91c3Ivc3JjL3BocDsgCWdudUFyY2g9IiQoZHBrZy1hcmNoaXRlY3R1cmUgLS1xdWVyeSBERUJfQlVJTERfR05VX1RZUEUpIjsgCS4vY29uZmlndXJlIAkJLS1idWlsZD0iJGdudUFyY2giIAkJLS13aXRoLWNvbmZpZy1maWxlLXBhdGg9IiRQSFBfSU5JX0RJUiIgCQktLXdpdGgtY29uZmlnLWZpbGUtc2Nhbi1kaXI9IiRQSFBfSU5JX0RJUi9jb25mLmQiIAkJCQktLWVuYWJsZS1vcHRpb24tY2hlY2tpbmc9ZmF0YWwgCQkJCS0td2l0aC1taGFzaCAJCQkJLS1lbmFibGUtZnRwIAkJLS1lbmFibGUtbWJzdHJpbmcgCQktLWVuYWJsZS1teXNxbG5kIAkJLS13aXRoLXBhc3N3b3JkLWFyZ29uMiAJCS0td2l0aC1zb2RpdW09c2hhcmVkIAkJLS13aXRoLXBkby1zcWxpdGU9L3VzciAJCS0td2l0aC1zcWxpdGUzPS91c3IgCQkJCS0td2l0aC1jdXJsIAkJLS13aXRoLWxpYmVkaXQgCQktLXdpdGgtb3BlbnNzbCAJCS0td2l0aC16bGliIAkJCQkkKHRlc3QgIiRnbnVBcmNoIiA9ICdzMzkweC1saW51eC1tdXNsJyAmJiBlY2hvICctLXdpdGhvdXQtcGNyZS1qaXQnKSAJCQkJJHtQSFBfRVhUUkFfQ09ORklHVVJFX0FSR1M6LX0gCTsgCW1ha2UgLWogIiQobnByb2MpIjsgCWZpbmQgLXR5cGUgZiAtbmFtZSAnKi5hJyAtZGVsZXRlOyAJbWFrZSBpbnN0YWxsOyAJZmluZCAvdXNyL2xvY2FsL2JpbiAvdXNyL2xvY2FsL3NiaW4gLXR5cGUgZiAtcGVybSArMDExMSAtZXhlYyBzdHJpcCAtLXN0cmlwLWFsbCAne30nICsgfHwgdHJ1ZTsgCW1ha2UgY2xlYW47IAkJY3AgLXYgcGhwLmluaS0qICIkUEhQX0lOSV9ESVIvIjsgCQljZCAvOyAJZG9ja2VyLXBocC1zb3VyY2UgZGVsZXRlOyAJCXJ1bkRlcHM9IiQoIAkJc2NhbmVsZiAtLW5lZWRlZCAtLW5vYmFubmVyIC0tZm9ybWF0ICclbiNwJyAtLXJlY3Vyc2l2ZSAvdXNyL2xvY2FsIAkJCXwgdHIgJywnICdcbicgCQkJfCBzb3J0IC11IAkJCXwgYXdrICdzeXN0ZW0oIlsgLWUgL3Vzci9sb2NhbC9saWIvIiAkMSAiIF0iKSA9PSAwIHsgbmV4dCB9IHsgcHJpbnQgInNvOiIgJDEgfScgCSkiOyAJYXBrIGFkZCAtLW5vLWNhY2hlICRydW5EZXBzOyAJCWFwayBkZWwgLS1uby1uZXR3b3JrIC5idWlsZC1kZXBzOyAJCXBocCAtLXZlcnNpb24=": Object {
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
            },
            "dockerfilePackages": Object {
              ".build-deps": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libsodium-dev libxml2-dev linux-headers oniguruma-dev openssl-dev sqlite-dev",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
              ".fetch-deps": Object {
                "installCommand": "apk add --no-cache --virtual .fetch-deps gnupg",
                "instruction": "/bin/sh -c set -eux; 		apk add --no-cache --virtual .fetch-deps gnupg; 		mkdir -p /usr/src; 	cd /usr/src; 		curl -fsSL -o php.tar.xz \\"$PHP_URL\\"; 		if [ -n \\"$PHP_SHA256\\" ]; then 		echo \\"$PHP_SHA256 *php.tar.xz\\" | sha256sum -c -; 	fi; 	if [ -n \\"$PHP_MD5\\" ]; then 		echo \\"$PHP_MD5 *php.tar.xz\\" | md5sum -c -; 	fi; 		if [ -n \\"$PHP_ASC_URL\\" ]; then 		curl -fsSL -o php.tar.xz.asc \\"$PHP_ASC_URL\\"; 		export GNUPGHOME=\\"$(mktemp -d)\\"; 		for key in $GPG_KEYS; do 			gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \\"$key\\"; 		done; 		gpg --batch --verify php.tar.xz.asc php.tar.xz; 		gpgconf --kill all; 		rm -rf \\"$GNUPGHOME\\"; 	fi; 		apk del --no-network .fetch-deps",
              },
              "PHPIZE_DEPS": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libsodium-dev libxml2-dev linux-headers oniguruma-dev openssl-dev sqlite-dev",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
              "argon2-dev": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libsodium-dev libxml2-dev linux-headers oniguruma-dev openssl-dev sqlite-dev",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
              "coreutils": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libsodium-dev libxml2-dev linux-headers oniguruma-dev openssl-dev sqlite-dev",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
              "curl-dev": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libsodium-dev libxml2-dev linux-headers oniguruma-dev openssl-dev sqlite-dev",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
              "gnupg": Object {
                "installCommand": "apk add --no-cache --virtual .fetch-deps gnupg",
                "instruction": "/bin/sh -c set -eux; 		apk add --no-cache --virtual .fetch-deps gnupg; 		mkdir -p /usr/src; 	cd /usr/src; 		curl -fsSL -o php.tar.xz \\"$PHP_URL\\"; 		if [ -n \\"$PHP_SHA256\\" ]; then 		echo \\"$PHP_SHA256 *php.tar.xz\\" | sha256sum -c -; 	fi; 	if [ -n \\"$PHP_MD5\\" ]; then 		echo \\"$PHP_MD5 *php.tar.xz\\" | md5sum -c -; 	fi; 		if [ -n \\"$PHP_ASC_URL\\" ]; then 		curl -fsSL -o php.tar.xz.asc \\"$PHP_ASC_URL\\"; 		export GNUPGHOME=\\"$(mktemp -d)\\"; 		for key in $GPG_KEYS; do 			gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \\"$key\\"; 		done; 		gpg --batch --verify php.tar.xz.asc php.tar.xz; 		gpgconf --kill all; 		rm -rf \\"$GNUPGHOME\\"; 	fi; 		apk del --no-network .fetch-deps",
              },
              "libedit-dev": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libsodium-dev libxml2-dev linux-headers oniguruma-dev openssl-dev sqlite-dev",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
              "libsodium-dev": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libsodium-dev libxml2-dev linux-headers oniguruma-dev openssl-dev sqlite-dev",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
              "libxml2-dev": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libsodium-dev libxml2-dev linux-headers oniguruma-dev openssl-dev sqlite-dev",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
              "linux-headers": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libsodium-dev libxml2-dev linux-headers oniguruma-dev openssl-dev sqlite-dev",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
              "oniguruma-dev": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libsodium-dev libxml2-dev linux-headers oniguruma-dev openssl-dev sqlite-dev",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
              "openssl-dev": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libsodium-dev libxml2-dev linux-headers oniguruma-dev openssl-dev sqlite-dev",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
              "runDeps": Object {
                "installCommand": "apk add --no-cache $runDeps",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
              "sqlite-dev": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libsodium-dev libxml2-dev linux-headers oniguruma-dev openssl-dev sqlite-dev",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
            },
          },
          "type": "autoDetectedUserInstructions",
        },
        Object {
          "data": Object {
            "names": Array [
              "ppc64le/php:8.0.0rc1-fpm-alpine3.12",
              "ppc64le/php@sha256:5467f37617a1ad7241977e028052c106d22f3a1b15dbab90abc1f4ce231fe441",
            ],
          },
          "type": "imageNames",
        },
      ],
      "identity": Object {
        "args": Object {
          "platform": "linux/ppc64le",
        },
        "type": "apk",
      },
      "target": Object {
        "image": "docker-image|ppc64le/php",
      },
    },
  ],
}
`;

exports[`PPC64 platform tests should correctly scan a PPC image when the user provides --platform=ppc64le and return platform: ppc64le 1`] = `
Object {
  "scanResults": Array [
    Object {
      "facts": Array [
        Object {
          "data": Object {
            "graph": Object {
              "nodes": Array [
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "acl/libacl@2.2.53-r0|1",
                    },
                    Object {
                      "nodeId": "alpine-baselayout/alpine-baselayout@3.2.0-r6",
                    },
                    Object {
                      "nodeId": "alpine-keys/alpine-keys@2.2-r0",
                    },
                    Object {
                      "nodeId": "apk-tools/apk-tools@2.10.5-r1",
                    },
                    Object {
                      "nodeId": "argon2/argon2-libs@20190702-r1",
                    },
                    Object {
                      "nodeId": "busybox/busybox@1.31.1-r16|2",
                    },
                    Object {
                      "nodeId": "busybox/ssl_client@1.31.1-r16",
                    },
                    Object {
                      "nodeId": "ca-certificates/ca-certificates@20191127-r3|1",
                    },
                    Object {
                      "nodeId": "ca-certificates/ca-certificates-bundle@20191127-r2",
                    },
                    Object {
                      "nodeId": "curl/curl@7.69.1-r0",
                    },
                    Object {
                      "nodeId": "curl/libcurl@7.69.1-r1|2",
                    },
                    Object {
                      "nodeId": "libc-dev/libc-utils@0.7.2-r3",
                    },
                    Object {
                      "nodeId": "libedit/libedit@20191231.3.1-r0",
                    },
                    Object {
                      "nodeId": "libsodium/libsodium@1.0.18-r0",
                    },
                    Object {
                      "nodeId": "libtls-standalone/libtls-standalone@2.9.1-r1|2",
                    },
                    Object {
                      "nodeId": "libxml2/libxml2@2.9.10-r5",
                    },
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "musl/musl-utils@1.1.24-r8|2",
                    },
                    Object {
                      "nodeId": "ncurses/ncurses-libs@6.2_p20200523-r0|2",
                    },
                    Object {
                      "nodeId": "ncurses/ncurses-terminfo-base@6.2_p20200523-r0",
                    },
                    Object {
                      "nodeId": "nghttp2/nghttp2-libs@1.41.0-r0|2",
                    },
                    Object {
                      "nodeId": "oniguruma/oniguruma@6.9.5-r1",
                    },
                    Object {
                      "nodeId": "openssl/libcrypto1.1@1.1.1g-r0|2",
                    },
                    Object {
                      "nodeId": "openssl/libssl1.1@1.1.1g-r0|2",
                    },
                    Object {
                      "nodeId": "openssl/openssl@1.1.1g-r0|2",
                    },
                    Object {
                      "nodeId": "pax-utils/scanelf@1.2.6-r0|2",
                    },
                    Object {
                      "nodeId": "sqlite/sqlite-libs@3.32.1-r0",
                    },
                    Object {
                      "nodeId": "tar/tar@1.32-r1",
                    },
                    Object {
                      "nodeId": "xz/xz@5.2.5-r0",
                    },
                    Object {
                      "nodeId": "xz/xz-libs@5.2.5-r0|2",
                    },
                    Object {
                      "nodeId": "zlib/zlib@1.2.11-r3|2",
                    },
                  ],
                  "nodeId": "root-node",
                  "pkgId": "docker-image|ppc64le/php@8.0.0rc1-fpm-alpine3.12",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "musl/musl@1.1.24-r9",
                  "pkgId": "musl/musl@1.1.24-r9",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "acl/libacl@2.2.53-r0|1",
                  "pkgId": "acl/libacl@2.2.53-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "acl/libacl@2.2.53-r0|2",
                  "pkgId": "acl/libacl@2.2.53-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "busybox/busybox@1.31.1-r16|1",
                  "pkgId": "busybox/busybox@1.31.1-r16",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "busybox/busybox@1.31.1-r16|2",
                  "pkgId": "busybox/busybox@1.31.1-r16",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "busybox/busybox@1.31.1-r16|1",
                    },
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "alpine-baselayout/alpine-baselayout@3.2.0-r6",
                  "pkgId": "alpine-baselayout/alpine-baselayout@3.2.0-r6",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "alpine-keys/alpine-keys@2.2-r0",
                  "pkgId": "alpine-keys/alpine-keys@2.2-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "openssl/libcrypto1.1@1.1.1g-r0|1",
                  "pkgId": "openssl/libcrypto1.1@1.1.1g-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "openssl/libcrypto1.1@1.1.1g-r0|2",
                  "pkgId": "openssl/libcrypto1.1@1.1.1g-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "openssl/libssl1.1@1.1.1g-r0|1",
                  "pkgId": "openssl/libssl1.1@1.1.1g-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "openssl/libcrypto1.1@1.1.1g-r0|1",
                    },
                  ],
                  "nodeId": "openssl/libssl1.1@1.1.1g-r0|2",
                  "pkgId": "openssl/libssl1.1@1.1.1g-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "zlib/zlib@1.2.11-r3|1",
                  "pkgId": "zlib/zlib@1.2.11-r3",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "zlib/zlib@1.2.11-r3|2",
                  "pkgId": "zlib/zlib@1.2.11-r3",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "openssl/libcrypto1.1@1.1.1g-r0|1",
                    },
                    Object {
                      "nodeId": "openssl/libssl1.1@1.1.1g-r0|1",
                    },
                    Object {
                      "nodeId": "zlib/zlib@1.2.11-r3|1",
                    },
                  ],
                  "nodeId": "apk-tools/apk-tools@2.10.5-r1",
                  "pkgId": "apk-tools/apk-tools@2.10.5-r1",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "argon2/argon2-libs@20190702-r1",
                  "pkgId": "argon2/argon2-libs@20190702-r1",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "libtls-standalone/libtls-standalone@2.9.1-r1|1",
                  "pkgId": "libtls-standalone/libtls-standalone@2.9.1-r1",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "ca-certificates/ca-certificates-bundle@20191127-r2",
                    },
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "openssl/libcrypto1.1@1.1.1g-r0|1",
                    },
                    Object {
                      "nodeId": "openssl/libssl1.1@1.1.1g-r0|1",
                    },
                  ],
                  "nodeId": "libtls-standalone/libtls-standalone@2.9.1-r1|2",
                  "pkgId": "libtls-standalone/libtls-standalone@2.9.1-r1",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "libtls-standalone/libtls-standalone@2.9.1-r1|1",
                    },
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "busybox/ssl_client@1.31.1-r16",
                  "pkgId": "busybox/ssl_client@1.31.1-r16",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "openssl/libcrypto1.1@1.1.1g-r0|1",
                    },
                    Object {
                      "nodeId": "openssl/libssl1.1@1.1.1g-r0|1",
                    },
                  ],
                  "nodeId": "openssl/openssl@1.1.1g-r0|1",
                  "pkgId": "openssl/openssl@1.1.1g-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "openssl/openssl@1.1.1g-r0|2",
                  "pkgId": "openssl/openssl@1.1.1g-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "busybox/busybox@1.31.1-r16|1",
                    },
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "openssl/libcrypto1.1@1.1.1g-r0|1",
                    },
                    Object {
                      "nodeId": "openssl/openssl@1.1.1g-r0|1",
                    },
                  ],
                  "nodeId": "ca-certificates/ca-certificates@20191127-r3|1",
                  "pkgId": "ca-certificates/ca-certificates@20191127-r3",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "ca-certificates/ca-certificates@20191127-r3|2",
                  "pkgId": "ca-certificates/ca-certificates@20191127-r3",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "ca-certificates/ca-certificates-bundle@20191127-r2",
                  "pkgId": "ca-certificates/ca-certificates-bundle@20191127-r2",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "nghttp2/nghttp2-libs@1.41.0-r0|1",
                  "pkgId": "nghttp2/nghttp2-libs@1.41.0-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "nghttp2/nghttp2-libs@1.41.0-r0|2",
                  "pkgId": "nghttp2/nghttp2-libs@1.41.0-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "ca-certificates/ca-certificates@20191127-r3|2",
                    },
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "nghttp2/nghttp2-libs@1.41.0-r0|1",
                    },
                    Object {
                      "nodeId": "openssl/libcrypto1.1@1.1.1g-r0|1",
                    },
                    Object {
                      "nodeId": "openssl/libssl1.1@1.1.1g-r0|1",
                    },
                    Object {
                      "nodeId": "zlib/zlib@1.2.11-r3|1",
                    },
                  ],
                  "nodeId": "curl/libcurl@7.69.1-r1|1",
                  "pkgId": "curl/libcurl@7.69.1-r1",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "curl/libcurl@7.69.1-r1|2",
                  "pkgId": "curl/libcurl@7.69.1-r1",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "ca-certificates/ca-certificates@20191127-r3|2",
                    },
                    Object {
                      "nodeId": "curl/libcurl@7.69.1-r1|1",
                    },
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "zlib/zlib@1.2.11-r3|1",
                    },
                  ],
                  "nodeId": "curl/curl@7.69.1-r0",
                  "pkgId": "curl/curl@7.69.1-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "musl/musl-utils@1.1.24-r8|1",
                  "pkgId": "musl/musl-utils@1.1.24-r8",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "pax-utils/scanelf@1.2.6-r0|1",
                    },
                  ],
                  "nodeId": "musl/musl-utils@1.1.24-r8|2",
                  "pkgId": "musl/musl-utils@1.1.24-r8",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl-utils@1.1.24-r8|1",
                    },
                  ],
                  "nodeId": "libc-dev/libc-utils@0.7.2-r3",
                  "pkgId": "libc-dev/libc-utils@0.7.2-r3",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "ncurses/ncurses-libs@6.2_p20200523-r0|1",
                  "pkgId": "ncurses/ncurses-libs@6.2_p20200523-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "ncurses/ncurses-terminfo-base@6.2_p20200523-r0",
                    },
                  ],
                  "nodeId": "ncurses/ncurses-libs@6.2_p20200523-r0|2",
                  "pkgId": "ncurses/ncurses-libs@6.2_p20200523-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "ncurses/ncurses-libs@6.2_p20200523-r0|1",
                    },
                  ],
                  "nodeId": "libedit/libedit@20191231.3.1-r0",
                  "pkgId": "libedit/libedit@20191231.3.1-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "libsodium/libsodium@1.0.18-r0",
                  "pkgId": "libsodium/libsodium@1.0.18-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "xz/xz-libs@5.2.5-r0|1",
                  "pkgId": "xz/xz-libs@5.2.5-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "xz/xz-libs@5.2.5-r0|2",
                  "pkgId": "xz/xz-libs@5.2.5-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "xz/xz-libs@5.2.5-r0|1",
                    },
                    Object {
                      "nodeId": "zlib/zlib@1.2.11-r3|1",
                    },
                  ],
                  "nodeId": "libxml2/libxml2@2.9.10-r5",
                  "pkgId": "libxml2/libxml2@2.9.10-r5",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "pax-utils/scanelf@1.2.6-r0|1",
                  "pkgId": "pax-utils/scanelf@1.2.6-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "pax-utils/scanelf@1.2.6-r0|2",
                  "pkgId": "pax-utils/scanelf@1.2.6-r0",
                },
                Object {
                  "deps": Array [],
                  "nodeId": "ncurses/ncurses-terminfo-base@6.2_p20200523-r0",
                  "pkgId": "ncurses/ncurses-terminfo-base@6.2_p20200523-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "oniguruma/oniguruma@6.9.5-r1",
                  "pkgId": "oniguruma/oniguruma@6.9.5-r1",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "sqlite/sqlite-libs@3.32.1-r0",
                  "pkgId": "sqlite/sqlite-libs@3.32.1-r0",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "acl/libacl@2.2.53-r0|2",
                    },
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                  ],
                  "nodeId": "tar/tar@1.32-r1",
                  "pkgId": "tar/tar@1.32-r1",
                },
                Object {
                  "deps": Array [
                    Object {
                      "nodeId": "musl/musl@1.1.24-r9",
                    },
                    Object {
                      "nodeId": "xz/xz-libs@5.2.5-r0|1",
                    },
                  ],
                  "nodeId": "xz/xz@5.2.5-r0",
                  "pkgId": "xz/xz@5.2.5-r0",
                },
              ],
              "rootNodeId": "root-node",
            },
            "pkgManager": Object {
              "name": "apk",
              "repositories": Array [
                Object {
                  "alias": "alpine:3.12.0",
                },
              ],
            },
            "pkgs": Array [
              Object {
                "id": "docker-image|ppc64le/php@8.0.0rc1-fpm-alpine3.12",
                "info": Object {
                  "name": "docker-image|ppc64le/php",
                  "version": "8.0.0rc1-fpm-alpine3.12",
                },
              },
              Object {
                "id": "musl/musl@1.1.24-r9",
                "info": Object {
                  "name": "musl/musl",
                  "version": "1.1.24-r9",
                },
              },
              Object {
                "id": "acl/libacl@2.2.53-r0",
                "info": Object {
                  "name": "acl/libacl",
                  "version": "2.2.53-r0",
                },
              },
              Object {
                "id": "busybox/busybox@1.31.1-r16",
                "info": Object {
                  "name": "busybox/busybox",
                  "version": "1.31.1-r16",
                },
              },
              Object {
                "id": "alpine-baselayout/alpine-baselayout@3.2.0-r6",
                "info": Object {
                  "name": "alpine-baselayout/alpine-baselayout",
                  "version": "3.2.0-r6",
                },
              },
              Object {
                "id": "alpine-keys/alpine-keys@2.2-r0",
                "info": Object {
                  "name": "alpine-keys/alpine-keys",
                  "version": "2.2-r0",
                },
              },
              Object {
                "id": "openssl/libcrypto1.1@1.1.1g-r0",
                "info": Object {
                  "name": "openssl/libcrypto1.1",
                  "version": "1.1.1g-r0",
                },
              },
              Object {
                "id": "openssl/libssl1.1@1.1.1g-r0",
                "info": Object {
                  "name": "openssl/libssl1.1",
                  "version": "1.1.1g-r0",
                },
              },
              Object {
                "id": "zlib/zlib@1.2.11-r3",
                "info": Object {
                  "name": "zlib/zlib",
                  "version": "1.2.11-r3",
                },
              },
              Object {
                "id": "apk-tools/apk-tools@2.10.5-r1",
                "info": Object {
                  "name": "apk-tools/apk-tools",
                  "version": "2.10.5-r1",
                },
              },
              Object {
                "id": "argon2/argon2-libs@20190702-r1",
                "info": Object {
                  "name": "argon2/argon2-libs",
                  "version": "20190702-r1",
                },
              },
              Object {
                "id": "libtls-standalone/libtls-standalone@2.9.1-r1",
                "info": Object {
                  "name": "libtls-standalone/libtls-standalone",
                  "version": "2.9.1-r1",
                },
              },
              Object {
                "id": "busybox/ssl_client@1.31.1-r16",
                "info": Object {
                  "name": "busybox/ssl_client",
                  "version": "1.31.1-r16",
                },
              },
              Object {
                "id": "openssl/openssl@1.1.1g-r0",
                "info": Object {
                  "name": "openssl/openssl",
                  "version": "1.1.1g-r0",
                },
              },
              Object {
                "id": "ca-certificates/ca-certificates@20191127-r3",
                "info": Object {
                  "name": "ca-certificates/ca-certificates",
                  "version": "20191127-r3",
                },
              },
              Object {
                "id": "ca-certificates/ca-certificates-bundle@20191127-r2",
                "info": Object {
                  "name": "ca-certificates/ca-certificates-bundle",
                  "version": "20191127-r2",
                },
              },
              Object {
                "id": "nghttp2/nghttp2-libs@1.41.0-r0",
                "info": Object {
                  "name": "nghttp2/nghttp2-libs",
                  "version": "1.41.0-r0",
                },
              },
              Object {
                "id": "curl/libcurl@7.69.1-r1",
                "info": Object {
                  "name": "curl/libcurl",
                  "version": "7.69.1-r1",
                },
              },
              Object {
                "id": "curl/curl@7.69.1-r0",
                "info": Object {
                  "name": "curl/curl",
                  "version": "7.69.1-r0",
                },
              },
              Object {
                "id": "musl/musl-utils@1.1.24-r8",
                "info": Object {
                  "name": "musl/musl-utils",
                  "version": "1.1.24-r8",
                },
              },
              Object {
                "id": "libc-dev/libc-utils@0.7.2-r3",
                "info": Object {
                  "name": "libc-dev/libc-utils",
                  "version": "0.7.2-r3",
                },
              },
              Object {
                "id": "ncurses/ncurses-libs@6.2_p20200523-r0",
                "info": Object {
                  "name": "ncurses/ncurses-libs",
                  "version": "6.2_p20200523-r0",
                },
              },
              Object {
                "id": "libedit/libedit@20191231.3.1-r0",
                "info": Object {
                  "name": "libedit/libedit",
                  "version": "20191231.3.1-r0",
                },
              },
              Object {
                "id": "libsodium/libsodium@1.0.18-r0",
                "info": Object {
                  "name": "libsodium/libsodium",
                  "version": "1.0.18-r0",
                },
              },
              Object {
                "id": "xz/xz-libs@5.2.5-r0",
                "info": Object {
                  "name": "xz/xz-libs",
                  "version": "5.2.5-r0",
                },
              },
              Object {
                "id": "libxml2/libxml2@2.9.10-r5",
                "info": Object {
                  "name": "libxml2/libxml2",
                  "version": "2.9.10-r5",
                },
              },
              Object {
                "id": "pax-utils/scanelf@1.2.6-r0",
                "info": Object {
                  "name": "pax-utils/scanelf",
                  "version": "1.2.6-r0",
                },
              },
              Object {
                "id": "ncurses/ncurses-terminfo-base@6.2_p20200523-r0",
                "info": Object {
                  "name": "ncurses/ncurses-terminfo-base",
                  "version": "6.2_p20200523-r0",
                },
              },
              Object {
                "id": "oniguruma/oniguruma@6.9.5-r1",
                "info": Object {
                  "name": "oniguruma/oniguruma",
                  "version": "6.9.5-r1",
                },
              },
              Object {
                "id": "sqlite/sqlite-libs@3.32.1-r0",
                "info": Object {
                  "name": "sqlite/sqlite-libs",
                  "version": "3.32.1-r0",
                },
              },
              Object {
                "id": "tar/tar@1.32-r1",
                "info": Object {
                  "name": "tar/tar",
                  "version": "1.32-r1",
                },
              },
              Object {
                "id": "xz/xz@5.2.5-r0",
                "info": Object {
                  "name": "xz/xz",
                  "version": "5.2.5-r0",
                },
              },
            ],
            "schemaVersion": "1.3.0",
          },
          "type": "depGraph",
        },
        Object {
          "data": "sha256:fe64ed5afe5d5b2838dea115bd245cadccf97fdc8f3b9e90ccb3a4cc235cf5bc",
          "type": "imageId",
        },
        Object {
          "data": Array [
            "5077f8601dceb5744d875d7740ebc203f674b108a0188f3a31e292b21a4bee64/layer.tar",
            "46f98eb9049c4fcbaa1cf16ddb44aaf910a89a5471dc303198251fa25bc2a1ef/layer.tar",
            "e50cdb8e03fc1b19217cd9f80b86142d090ad3e818795b339ea4d9ef9b74555f/layer.tar",
            "8b4466e085b12b265fb47397c7c105fd7d78a5883beef49ab9f386393c4c3dae/layer.tar",
            "3da6cf5673f6c68a98cb0fff683ae97cadd61fc243467e67f8b7ce6f431da154/layer.tar",
            "82fa271059acb56e3b8e98a6da57f60c4221ed049884ea76885b168864cd084a/layer.tar",
            "056a460c2e9c1813b18c006e67241dd2aab28d6163009bc2dc6707415c70ee55/layer.tar",
            "fdfa909abe06743a2e2e8472539d26f7169a54a08f5808ffbf60499893e0ca29/layer.tar",
            "821c123f6ebfd3e30fd422ad888483dfe8b325dc85556e655af53a6fb389762f/layer.tar",
            "05f53b369b658f1bdcfb30c89c3fef3d68db543600596375f862fbcf3c083557/layer.tar",
          ],
          "type": "imageLayers",
        },
        Object {
          "data": "2020-10-02T02:54:58.006860434Z",
          "type": "imageCreationTime",
        },
        Object {
          "data": Array [
            "sha256:5a8b4ad4d2fdb56c18f5b1e532f17ef33e6404c83dc1581a3adddf99dcd9d51c",
            "sha256:76daf675c598f6bb12a85310d25f6cc070e3c4fd460b4b396ba9ee1dc52356ef",
            "sha256:cb0f674aa825b8a225b4f2c34828aa63cf0f5d1a7440f2dc68c9d3549c03fad8",
            "sha256:0c9a3fd39ef3b7c4aba9a5f2ac9f91f060f312f47e0dccc4614b4c9ce96213f3",
            "sha256:8587af6bdad52b7756699d14d8f55b340c5fe3a0b0c0c75636f60c6b86ab0856",
            "sha256:1a514508a2a4053c7156d393288e658201f4a9526423cac2ab5c48d23cd46546",
            "sha256:78838c1f02b21ed98005126845be133aa3e1c8921599714c5b7950c3d1630e02",
            "sha256:9f334011825722d45a7811645310ae610f85369ac89b1133bdf2bc558f499cd5",
            "sha256:0a43bfef3e6f9c1725b5049f5a4ada18329f4e3ebb6d0105aaab2995b34b0cb9",
            "sha256:7786a29a020c1d1a81c931d2cdf4ae73bab1227b66ccf08c0ebbc3eadfbdde30",
          ],
          "type": "rootFs",
        },
        Object {
          "data": "Alpine Linux v3.12",
          "type": "imageOsReleasePrettyName",
        },
        Object {
          "data": Object {
            "dockerfileLayers": Object {
              "L2Jpbi9zaCAtYyBzZXQgLWV1eDsgCQlhcGsgYWRkIC0tbm8tY2FjaGUgLS12aXJ0dWFsIC5mZXRjaC1kZXBzIGdudXBnOyAJCW1rZGlyIC1wIC91c3Ivc3JjOyAJY2QgL3Vzci9zcmM7IAkJY3VybCAtZnNTTCAtbyBwaHAudGFyLnh6ICIkUEhQX1VSTCI7IAkJaWYgWyAtbiAiJFBIUF9TSEEyNTYiIF07IHRoZW4gCQllY2hvICIkUEhQX1NIQTI1NiAqcGhwLnRhci54eiIgfCBzaGEyNTZzdW0gLWMgLTsgCWZpOyAJaWYgWyAtbiAiJFBIUF9NRDUiIF07IHRoZW4gCQllY2hvICIkUEhQX01ENSAqcGhwLnRhci54eiIgfCBtZDVzdW0gLWMgLTsgCWZpOyAJCWlmIFsgLW4gIiRQSFBfQVNDX1VSTCIgXTsgdGhlbiAJCWN1cmwgLWZzU0wgLW8gcGhwLnRhci54ei5hc2MgIiRQSFBfQVNDX1VSTCI7IAkJZXhwb3J0IEdOVVBHSE9NRT0iJChta3RlbXAgLWQpIjsgCQlmb3Iga2V5IGluICRHUEdfS0VZUzsgZG8gCQkJZ3BnIC0tYmF0Y2ggLS1rZXlzZXJ2ZXIgaGEucG9vbC5za3Mta2V5c2VydmVycy5uZXQgLS1yZWN2LWtleXMgIiRrZXkiOyAJCWRvbmU7IAkJZ3BnIC0tYmF0Y2ggLS12ZXJpZnkgcGhwLnRhci54ei5hc2MgcGhwLnRhci54ejsgCQlncGdjb25mIC0ta2lsbCBhbGw7IAkJcm0gLXJmICIkR05VUEdIT01FIjsgCWZpOyAJCWFwayBkZWwgLS1uby1uZXR3b3JrIC5mZXRjaC1kZXBz": Object {
                "instruction": "/bin/sh -c set -eux; 		apk add --no-cache --virtual .fetch-deps gnupg; 		mkdir -p /usr/src; 	cd /usr/src; 		curl -fsSL -o php.tar.xz \\"$PHP_URL\\"; 		if [ -n \\"$PHP_SHA256\\" ]; then 		echo \\"$PHP_SHA256 *php.tar.xz\\" | sha256sum -c -; 	fi; 	if [ -n \\"$PHP_MD5\\" ]; then 		echo \\"$PHP_MD5 *php.tar.xz\\" | md5sum -c -; 	fi; 		if [ -n \\"$PHP_ASC_URL\\" ]; then 		curl -fsSL -o php.tar.xz.asc \\"$PHP_ASC_URL\\"; 		export GNUPGHOME=\\"$(mktemp -d)\\"; 		for key in $GPG_KEYS; do 			gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \\"$key\\"; 		done; 		gpg --batch --verify php.tar.xz.asc php.tar.xz; 		gpgconf --kill all; 		rm -rf \\"$GNUPGHOME\\"; 	fi; 		apk del --no-network .fetch-deps",
              },
              "L2Jpbi9zaCAtYyBzZXQgLWV1eDsgCWFwayBhZGQgLS1uby1jYWNoZSAtLXZpcnR1YWwgLmJ1aWxkLWRlcHMgCQkkUEhQSVpFX0RFUFMgCQlhcmdvbjItZGV2IAkJY29yZXV0aWxzIAkJY3VybC1kZXYgCQlsaWJlZGl0LWRldiAJCWxpYnNvZGl1bS1kZXYgCQlsaWJ4bWwyLWRldiAJCWxpbnV4LWhlYWRlcnMgCQlvbmlndXJ1bWEtZGV2IAkJb3BlbnNzbC1kZXYgCQlzcWxpdGUtZGV2IAk7IAkJZXhwb3J0IENGTEFHUz0iJFBIUF9DRkxBR1MiIAkJQ1BQRkxBR1M9IiRQSFBfQ1BQRkxBR1MiIAkJTERGTEFHUz0iJFBIUF9MREZMQUdTIiAJOyAJZG9ja2VyLXBocC1zb3VyY2UgZXh0cmFjdDsgCWNkIC91c3Ivc3JjL3BocDsgCWdudUFyY2g9IiQoZHBrZy1hcmNoaXRlY3R1cmUgLS1xdWVyeSBERUJfQlVJTERfR05VX1RZUEUpIjsgCS4vY29uZmlndXJlIAkJLS1idWlsZD0iJGdudUFyY2giIAkJLS13aXRoLWNvbmZpZy1maWxlLXBhdGg9IiRQSFBfSU5JX0RJUiIgCQktLXdpdGgtY29uZmlnLWZpbGUtc2Nhbi1kaXI9IiRQSFBfSU5JX0RJUi9jb25mLmQiIAkJCQktLWVuYWJsZS1vcHRpb24tY2hlY2tpbmc9ZmF0YWwgCQkJCS0td2l0aC1taGFzaCAJCQkJLS1lbmFibGUtZnRwIAkJLS1lbmFibGUtbWJzdHJpbmcgCQktLWVuYWJsZS1teXNxbG5kIAkJLS13aXRoLXBhc3N3b3JkLWFyZ29uMiAJCS0td2l0aC1zb2RpdW09c2hhcmVkIAkJLS13aXRoLXBkby1zcWxpdGU9L3VzciAJCS0td2l0aC1zcWxpdGUzPS91c3IgCQkJCS0td2l0aC1jdXJsIAkJLS13aXRoLWxpYmVkaXQgCQktLXdpdGgtb3BlbnNzbCAJCS0td2l0aC16bGliIAkJCQkkKHRlc3QgIiRnbnVBcmNoIiA9ICdzMzkweC1saW51eC1tdXNsJyAmJiBlY2hvICctLXdpdGhvdXQtcGNyZS1qaXQnKSAJCQkJJHtQSFBfRVhUUkFfQ09ORklHVVJFX0FSR1M6LX0gCTsgCW1ha2UgLWogIiQobnByb2MpIjsgCWZpbmQgLXR5cGUgZiAtbmFtZSAnKi5hJyAtZGVsZXRlOyAJbWFrZSBpbnN0YWxsOyAJZmluZCAvdXNyL2xvY2FsL2JpbiAvdXNyL2xvY2FsL3NiaW4gLXR5cGUgZiAtcGVybSArMDExMSAtZXhlYyBzdHJpcCAtLXN0cmlwLWFsbCAne30nICsgfHwgdHJ1ZTsgCW1ha2UgY2xlYW47IAkJY3AgLXYgcGhwLmluaS0qICIkUEhQX0lOSV9ESVIvIjsgCQljZCAvOyAJZG9ja2VyLXBocC1zb3VyY2UgZGVsZXRlOyAJCXJ1bkRlcHM9IiQoIAkJc2NhbmVsZiAtLW5lZWRlZCAtLW5vYmFubmVyIC0tZm9ybWF0ICclbiNwJyAtLXJlY3Vyc2l2ZSAvdXNyL2xvY2FsIAkJCXwgdHIgJywnICdcbicgCQkJfCBzb3J0IC11IAkJCXwgYXdrICdzeXN0ZW0oIlsgLWUgL3Vzci9sb2NhbC9saWIvIiAkMSAiIF0iKSA9PSAwIHsgbmV4dCB9IHsgcHJpbnQgInNvOiIgJDEgfScgCSkiOyAJYXBrIGFkZCAtLW5vLWNhY2hlICRydW5EZXBzOyAJCWFwayBkZWwgLS1uby1uZXR3b3JrIC5idWlsZC1kZXBzOyAJCXBocCAtLXZlcnNpb24=": Object {
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
            },
            "dockerfilePackages": Object {
              ".build-deps": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libsodium-dev libxml2-dev linux-headers oniguruma-dev openssl-dev sqlite-dev",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
              ".fetch-deps": Object {
                "installCommand": "apk add --no-cache --virtual .fetch-deps gnupg",
                "instruction": "/bin/sh -c set -eux; 		apk add --no-cache --virtual .fetch-deps gnupg; 		mkdir -p /usr/src; 	cd /usr/src; 		curl -fsSL -o php.tar.xz \\"$PHP_URL\\"; 		if [ -n \\"$PHP_SHA256\\" ]; then 		echo \\"$PHP_SHA256 *php.tar.xz\\" | sha256sum -c -; 	fi; 	if [ -n \\"$PHP_MD5\\" ]; then 		echo \\"$PHP_MD5 *php.tar.xz\\" | md5sum -c -; 	fi; 		if [ -n \\"$PHP_ASC_URL\\" ]; then 		curl -fsSL -o php.tar.xz.asc \\"$PHP_ASC_URL\\"; 		export GNUPGHOME=\\"$(mktemp -d)\\"; 		for key in $GPG_KEYS; do 			gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \\"$key\\"; 		done; 		gpg --batch --verify php.tar.xz.asc php.tar.xz; 		gpgconf --kill all; 		rm -rf \\"$GNUPGHOME\\"; 	fi; 		apk del --no-network .fetch-deps",
              },
              "PHPIZE_DEPS": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libsodium-dev libxml2-dev linux-headers oniguruma-dev openssl-dev sqlite-dev",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
              "argon2-dev": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libsodium-dev libxml2-dev linux-headers oniguruma-dev openssl-dev sqlite-dev",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
              "coreutils": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libsodium-dev libxml2-dev linux-headers oniguruma-dev openssl-dev sqlite-dev",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
              "curl-dev": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libsodium-dev libxml2-dev linux-headers oniguruma-dev openssl-dev sqlite-dev",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
              "gnupg": Object {
                "installCommand": "apk add --no-cache --virtual .fetch-deps gnupg",
                "instruction": "/bin/sh -c set -eux; 		apk add --no-cache --virtual .fetch-deps gnupg; 		mkdir -p /usr/src; 	cd /usr/src; 		curl -fsSL -o php.tar.xz \\"$PHP_URL\\"; 		if [ -n \\"$PHP_SHA256\\" ]; then 		echo \\"$PHP_SHA256 *php.tar.xz\\" | sha256sum -c -; 	fi; 	if [ -n \\"$PHP_MD5\\" ]; then 		echo \\"$PHP_MD5 *php.tar.xz\\" | md5sum -c -; 	fi; 		if [ -n \\"$PHP_ASC_URL\\" ]; then 		curl -fsSL -o php.tar.xz.asc \\"$PHP_ASC_URL\\"; 		export GNUPGHOME=\\"$(mktemp -d)\\"; 		for key in $GPG_KEYS; do 			gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \\"$key\\"; 		done; 		gpg --batch --verify php.tar.xz.asc php.tar.xz; 		gpgconf --kill all; 		rm -rf \\"$GNUPGHOME\\"; 	fi; 		apk del --no-network .fetch-deps",
              },
              "libedit-dev": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libsodium-dev libxml2-dev linux-headers oniguruma-dev openssl-dev sqlite-dev",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
              "libsodium-dev": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libsodium-dev libxml2-dev linux-headers oniguruma-dev openssl-dev sqlite-dev",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
              "libxml2-dev": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libsodium-dev libxml2-dev linux-headers oniguruma-dev openssl-dev sqlite-dev",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
              "linux-headers": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libsodium-dev libxml2-dev linux-headers oniguruma-dev openssl-dev sqlite-dev",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
              "oniguruma-dev": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libsodium-dev libxml2-dev linux-headers oniguruma-dev openssl-dev sqlite-dev",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
              "openssl-dev": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libsodium-dev libxml2-dev linux-headers oniguruma-dev openssl-dev sqlite-dev",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
              "runDeps": Object {
                "installCommand": "apk add --no-cache $runDeps",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
              "sqlite-dev": Object {
                "installCommand": "apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libsodium-dev libxml2-dev linux-headers oniguruma-dev openssl-dev sqlite-dev",
                "instruction": "/bin/sh -c set -eux; 	apk add --no-cache --virtual .build-deps 		$PHPIZE_DEPS 		argon2-dev 		coreutils 		curl-dev 		libedit-dev 		libsodium-dev 		libxml2-dev 		linux-headers 		oniguruma-dev 		openssl-dev 		sqlite-dev 	; 		export CFLAGS=\\"$PHP_CFLAGS\\" 		CPPFLAGS=\\"$PHP_CPPFLAGS\\" 		LDFLAGS=\\"$PHP_LDFLAGS\\" 	; 	docker-php-source extract; 	cd /usr/src/php; 	gnuArch=\\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\\"; 	./configure 		--build=\\"$gnuArch\\" 		--with-config-file-path=\\"$PHP_INI_DIR\\" 		--with-config-file-scan-dir=\\"$PHP_INI_DIR/conf.d\\" 				--enable-option-checking=fatal 				--with-mhash 				--enable-ftp 		--enable-mbstring 		--enable-mysqlnd 		--with-password-argon2 		--with-sodium=shared 		--with-pdo-sqlite=/usr 		--with-sqlite3=/usr 				--with-curl 		--with-libedit 		--with-openssl 		--with-zlib 				$(test \\"$gnuArch\\" = 's390x-linux-musl' && echo '--without-pcre-jit') 				\${PHP_EXTRA_CONFIGURE_ARGS:-} 	; 	make -j \\"$(nproc)\\"; 	find -type f -name '*.a' -delete; 	make install; 	find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; 	make clean; 		cp -v php.ini-* \\"$PHP_INI_DIR/\\"; 		cd /; 	docker-php-source delete; 		runDeps=\\"$( 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local 			| tr ',' '\\\\n' 			| sort -u 			| awk 'system(\\"[ -e /usr/local/lib/\\" $1 \\" ]\\") == 0 { next } { print \\"so:\\" $1 }' 	)\\"; 	apk add --no-cache $runDeps; 		apk del --no-network .build-deps; 		php --version",
              },
            },
          },
          "type": "autoDetectedUserInstructions",
        },
        Object {
          "data": Object {
            "names": Array [
              "ppc64le/php:8.0.0rc1-fpm-alpine3.12",
              "ppc64le/php@sha256:5467f37617a1ad7241977e028052c106d22f3a1b15dbab90abc1f4ce231fe441",
            ],
          },
          "type": "imageNames",
        },
      ],
      "identity": Object {
        "args": Object {
          "platform": "linux/ppc64le",
        },
        "type": "apk",
      },
      "target": Object {
        "image": "docker-image|ppc64le/php",
      },
    },
  ],
}
`;
